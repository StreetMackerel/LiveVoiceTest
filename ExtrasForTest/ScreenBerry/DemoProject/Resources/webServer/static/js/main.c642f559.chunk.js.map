{"version":3,"sources":["constants/ACTION_TYPES.js","lib/utils/renameItem.js","lib/utils/debounce.js","store/reducers/widgetsReducer.js","lib/utils/notEmptyObj.js","store/reducers/MPReducer.js","store/reducers/MPStatusReducer.js","constants/enums/NODES_LOG_LEVEL.js","store/reducers/mainReducer.js","store/reducers/MLReducer.js","store/ProviderStore/ProviderStore.js","lib/utils/stringifyWithFloats.js","lib/utils/createItemSettingsMsg.js","components/ItemSettings/ItemSettings.js","components/MPPlaylists/MPPlaylists.js","components/SelectMP/SelectMP.js","components/SwitchersForMP/SwitchersForMP.js","constants/MP_CMD.js","locales/i18n/index.js","lib/utils/parseMediaItem.js","constants/ML_CMD.js","constants/WIDGETS_CMD.js","constants/SB_PROTOCOL_CMD.js","constants/NODES_CMD.js","lib/api/getWSBroadcast.js","hooks/useWSBroadcast.js","hooks/usePrevious.js","hooks/useDoubleClick.js","lib/utils/convertTime.js","constants/BASE_URLs.js","constants/enums/MP.js","lib/utils/getPathToPreview.js","lib/utils/getCardImgPath.js","components/MPMediaItem/MPMediaItem.js","components/MLFolders/MLFolders.js","components/MLFile/MLFile.js","components/MLFileList/MLFileList.js","components/MLModalWindow/MLModalWindow.js","components/MPMediaItemList/MPMediaItemList.js","components/TimeSlider/TimeSlider.js","components/Volume/Volume.js","components/TransportControls/TransportControls.js","components/Player/Player.js","components/MPSideBar/MPSideBar.js","pages/MediaPlayer/MediaPlayer.js","components/WidgetList/WidgetList.js","lib/utils/registerParams.js","lib/utils/checkDisabled.js","lib/utils/computedStageSize.js","hooks/useWindowSize.js","components/Widget/Widget.js","pages/Widgets/Widgets.js","components/LanguageSwitcher/LanguageSwitcher.js","components/TabsLayout/TabsLayout.js","elements/CustomNavLink/CustomNavLink.js","pages/About/About.js","components/DesktopLayout/DesktopLayout.js","components/LogMessage/LogMessage.js","components/LayoutContainer/LayoutContainer.js","hooks/useCleanCache.js","App.js","serviceWorker.js","index.js","lib/utils/setLocationParams.js"],"names":["SET_MP_GRID_COLUMNS","SET_OPEN_MP_SIDE_BAR","SET_SELECTED_ITEM","FIRST_SET_PLAYLISTS","RENAME_PLAYLIST","SET_WS","SET_SELECTED_MP","SET_MEDIA_PLAYERS","CLOSE_WS_CONNECT","SET_STATUS","SET_ITEMS_TIME","DELETE_PLAYLIST","UPDATE_PLAYLISTS","SET_SELECTED_PLAYLIST","UPDATE_MEDIA_ITEMS","SET_PLAYLISTS","RENAME_MEDIA_PLAYERS","SET_SELECTED_FILES","SET_ML_LISTS","SET_SELECTED_ML_LIST","SET_IP_PORT","IS_CONNECTED","SET_COMBO_LIST","SET_SELECTED_WIDGET","SET_WIDGETS_XML","SET_WIDGETS_LIST","UPDATE_REACT_WIDGET_TREE","SERVER_VALUE_CHANGED","PRAMS_DIFF","NODES_PARAMS","SET_REGISTERED_PARAMS","SET_COMBO_BOX_TO_FILL","UPDATE_MP_VOLUME","SHOW_LOG_MSG","HIDE_LOG_MSG","CLEAN_REGISTERED_PARAMS","renameItem","name","index","lastIndexOf","slice","replace","debounce","func","timeout","delay","args","context","this","clearTimeout","setTimeout","apply","initialWidgetsStore","widgetsList","widgetsURL","selectedWidget","widgetsXML","ws","updateReactWidgetTree","comboLists","updatedParams","disabledElements","nodesParams","registeredParameters","comboBoxToFill","widgetsReducer","store","type","payload","ACTION_TYPES","forrmattedComboList","comboList","map","value","wizardsList","item","label","wizardsURL","includes","cloneDeep","notEmptyObj","key","Array","isArray","length","constructor","Object","initialMPStore","mediaPlayers","playlists","MPGridColumns","localStorage","getItem","openMPSideBar","selectedMP","currentPlayingItemId","currentPlayingPlaylistId","currentPlayingItem","selectedItem","selectedPlaylist","openMobileMPSideBar","statusTransportControl","isCurrentPlayingPlaylist","MPReducer","volume","setItem","find","id","updatedPlaylists","mapKeysDeep","parent","timeAmount","playingPlaylist","findDeep","playlist","items","formattedPlaylists","val","itemFile","path","frames","fps","isImage","hasAudio","mediaFilesList","res","filterDeep","filteredPlaylists","firstSelectedPlaylist","goupId","children","push","skipChildren","playlistId","newItem","mediaFile","file","updatedSelectedFile","newMediaPlayers","initialMPStatusStore","currentPlayingProgress","MPStatusReducer","initialMainStore","ip","logMsg","showLogMsg","from","msg","severity","duration","isConnected","port","mainReducer","IS_DISCONNECTED","NODES_LOG_LEVEL","initialMLStore","selectedFolder","selectedFiles","playlistItems","MLFoldersTree","MLReducer","filter","dirsPathArr","split","objTree","forEach","reduce","level","temp","mediaFiles","acc","i","fileName","MainContext","createContext","useMainStore","useContext","MLContext","useMLStore","MPContext","useMPStore","MPStatusContext","useMPStatusStore","WidgetsContext","useWidgetsStore","ProviderStore","useReducer","widgetsStore","dispatchWidgetsStore","MPStore","dispatchMPStore","MPStatusStore","dispatchMPStatusStore","mainStore","dispatchMainStore","MLStore","dispatchMLStore","widgetsTools","useMemo","MPTools","MPStatusStoreTools","mainStoreTools","MLStoreTools","Provider","stringifyWithFloats","targetValues","beginFloat","endFloat","globalIterIndex","jsonReplacer","indexElem","indexOf","splice","regexReplacer","match","num","Number","isNaN","json","JSON","stringify","regExp","RegExp","createItemSettingsMsg","selectedPlaylistId","infinityLoop","loops","muted","pauseOnStart","pauseOnEnd","fadeIn","MP_CMD","SET_ITEMS_PARAMS","useStyles","makeStyles","theme","root","flex","textAlign","paddingTop","spacing","paddingLeft","paddingRight","paddingBottom","input","width","display","FormControlLabel","justifyContent","marginBottom","marginLeft","FormControlLabelSwitch","Slider","flexContainerColumn","marginTop","flexDirection","alignItems","flexWrapper","color","props","whiteSpace","volumeWrapper","ItemSettings","classes","t","useTranslation","useState","volumeValue","setVolumeValue","setLabel","setFadeIn","setPauseOnStart","setPauseOnEnd","setInfinityLoop","setLoops","inputLoopRef","useRef","inputFadeInRef","commonParams","sendDebouncedValue","params","send","handleLabelChange","newValue","current","handleFadeInChange","handleLoopsChange","handlePauseOnStartChange","e","checked","handlePauseOnEndChange","handleInfinityLoopChange","handleVolumeChange","handleVolumeChangeCommitted","handleMutedChange","useEffect","Paper","className","Typography","variant","disabled","control","Input","size","onChange","labelPlacement","InputGroup","Button","onClick","notDisabled","handleMinus","InputNumber","ref","step","postfix","min","handlePlus","Switch","IconButton","onChangeCommitted","fontSize","icon","marginRight","iconButton","height","message","inputRename","playlistLabel","overflow","textOverflow","webKitLineClamp","webKitBoxOrient","addBtn","margin","warningMsg","MPPlaylists","history","useHistory","page","queryString","parse","window","location","search","playlistForRemove","setPlaylistForRemove","playlistForRename","setPlaylistForRename","newPlaylistName","setNewPlaylistName","handleSelect","selectedNode","setLocationParams","handleRemove","GROUP_ITEM_REMOVE","handleRename","preventDefault","GROUP_ITEM_RENAME","handleAddPlaylist","GROUP_ITEM_ADD","bottomEl","document","querySelector","scrollIntoView","behavior","block","inline","MP","foundPlaylist","firstPlaylist","TreePicker","onSelect","defaultExpandAll","placeholder","data","cleanable","onClose","renderTreeNode","nodeData","Box","component","stopPropagation","prev","renameEditor","removeConfirmation","Zoom","in","onSubmit","m","autoFocus","onKeyDown","renderValue","style","menuStyle","renderExtraFooter","elevation","Divider","SelectMP","handleChange","selectedMPLabel","SelectPicker","typography","iconBtn","breakpoints","down","SwipeableDrawer","iOS","process","browser","test","navigator","userAgent","marks","SwitchersForMP","useTheme","anchorEl","setAnchorEl","columns","setColumns","isMobile","useMediaQuery","openPopover","Boolean","undefined","toggleItemsSettings","open","justify","container","wrap","AspectRatio","aria-describedby","currentTarget","anchor","onOpen","paper","ModalProps","disableEnforceFocus","disableBackdropTransition","disableDiscovery","mt","mx","anchorOrigin","vertical","horizontal","transformOrigin","my","max","GET_ROOT_GROOP","ROOT_GROOP_RECEIVED","UPDATE_PLAYLISTS_RECEIVED","STATUS_RECEIVED","MEDIA_ITEM_REMOVED","GROUP_ITEM_RENAMED","GROUP_ITEM_MOVED","UPDATE_MEDIA_ITEMS_RECEIVED","PLAYLIST_RENAMED","PRAMS_DIFF_RECEIVED","ATTRIBUTES_RECEIVED","INSERT_MANY_ITEMS","REMOVE_MANY_ITEMS","SET_VOLUME","PLAY_ITEM","PLAY","PAUSE","PLAY_PREVIOUS","PLAY_NEXT","STOP","SEEK","REORDER_PLAYLIST","i18n","use","detector","initReactI18next","init","lng","resources","en","translation","translationEn","ch","translationCh","keySeparator","interpolation","escapeValue","parseMediaItem","penultimateIndex","mediaFilename","tagColor","comment","toFixed","sourceType","REGISTER_RESPONDER","RESPONDER_REGISTERED","RESPONDER_MESSAGE","SEND_TO_RESPONDER","getWSBroadcast","MPToRegister","debouncedVolumeUpdate","AdvanceWS","onerror","console","log","onclose","code","reason","onopen","registerRoot","SB_PROTOCOL_CMD","getNodes","NODES_CMD","WIDGETS_CMD","onmessage","evt","xml","parameters","listenerCmd","shift","resp","cmd","count","nodes","node","parametersCount","j","foundMP","registerMediaPlayer","getGroupItem","registerContentManager","parseGroup","group","child","playlistJson","itemsCount","formattedItems","ML_CMD","useWSBroadcast","serverIp","serverPort","prevSelectedMP","usePrevious","close","hostname","useDoubleClick","doubleClick","click","useCallback","event","detail","secondsToMinSec","seconds","time","h","Math","floor","s","hDisplay","MP_ICONS_URL","getPathToPreview","getCardImgPath","ENUMS_MP","itemBtn","ITEM_WIDTH","itemName","lineHeight","selected","backgroundColor","palette","secondary","main","CardContent","padding","listStyleType","borderWidth","borderStyle","position","borderColor","isSelected","primary","itemIcon","previewImg","ITEM_HEIGHT","objectFit","itemIconContainer","zIndex","darkTransparentBtn","bottom","right","minHeight","boxShadow","addIcon","removeBtn","top","left","removeIcon","statusIconContainer","iconWrapper","loopsContainer","MPMediaItem","SortableElement","memo","handleClickEditBtn","editMode","handleClickItem","handleDoubleClick","handleRemoveItem","openDialog","setOpenDialog","isCurrentPlayingItem","isValid","hybridClick","handleCloseRemoveDialog","ListItem","Card","CardActionArea","flexBasis","src","alt","CardMedia","onError","target","image","ml","Tooltip","TransitionComponent","title","Fab","Dialog","DialogContent","DialogContentText","DialogActions","areEqual","MLFolders","FILE_WIDTH","FILE_HEIGHT","backgroundImage","MLFile","columnIndex","rowIndex","handleClick","fileIndex","button","some","MLFileList","scrollbarWidth","useScrollbarSize","currentIndex","findIndex","newSelected","rowCount","rowWidth","itemWidth","itemsAmount","hasMore","maxItemsPerRow","ceil","getRowsAmount","itemData","columnCount","columnWidth","rowHeight","overscanRowCount","modal","rootPaper","background","border","shadows","outline","up","mediaFileListPaper","appBar","grow","flexGrow","fabButton","MLModalWindow","setOpenModal","Modal","closeAfterTransition","BackdropComponent","Backdrop","Fade","AppBar","Toolbar","aria-label","grid","editBtn","lastAddBtn","SortableVirtualizedGrid","SortableContainer","cellRenderer","itemIndex","GridWrapper","Component","useDragHandle","reorderPlaylist","newItems","setNewItems","propsObj","onSortEnd","oldIndex","newIndex","reordered","arrayMove","MPMediaItemList","openModal","setEditMode","reorderMap","propsData","axis","distance","timer","TimeSlider","isDragging","setIsDragging","setValue","currentPlayingSec","getAriaLabelText","valueLabelFormat","valueLabelDisplay","Popover","Volume","volumeContainer","py","px","orientation","mediaFilesListContainer","content","controls","TransportControls","Grid","xs","sm","direction","Player","MPSideBar","Slide","between","MediaPlayer","md","WidgetList","wizardURL","widget","hasWidget","elementParams","obj","isEqual","updatedElem","param","computedStageSize","innerWidth","stageWidth","stageHeight","useWindowSize","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","spacer","HLayout","VLayout","paragraph","header","ComboBox","imgContainer","img","default","stage","HSliderFloat","minWidth","GridLayout","VSliderFloat","VSliderFloatContainer","EllipseShape","shapeProps","setDisabledPan","shapeRef","trRef","getLayer","batchDraw","strokeScaleEnabled","strokeWidth","strokeLinearGradientStartPoint","x","y","strokeLinearGradientEndPoint","strokeLinearGradientColorStops","deepOrange","draggable","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","onDragEnd","onTransformStart","onTransformEnd","scaleX","scaleY","borderEnabled","rotateEnabled","anchorFill","enabledAnchors","boundBoxFunc","oldBox","newBox","RectShape","Widget","reactTree","setReactTree","localParams","setLocalParams","disabledPan","changedCalibrationArea","setChangedCalibArea","handleClickBtn","handleComboBoxChange","options","optionIndex","option","handleSliderChange","prevParams","handleSliderChangeCommitted","handleSliderInputChange","targetVal","handleBlur","handleCheckboxChange","xmlToReact","XMLToReact","Wizard","React","Fragment","attrs","gridColumnStart","gridPositionX","gridRowStart","gridPositionY","Spacer","registerParams","checkDisabled","Label","text","Image","screenAreaControls","comboBoxParams","checkBoxParams","comboListOptions","updatedComboBox","isBoundingBoxOff","isManualMode","disablePan","Date","now","newAttrs","coordinates","z","w","handleEllipseChange","handleRectChange","FormControl","InputLabel","htmlFor","Select","inputProps","MenuItem","defaultChecked","Checkbox","CheckBox","TextField","onBlur","change","isExist","updatedScreenAreaNormalized","changedCalibAreaByScreenberry","convert","Widgets","formControl","LanguageSwitcher","language","setLanguage","newlang","changeLanguage","toolbar","mixins","switcher","AppBarFooter","TabContentContainer","TabPanel","currentPage","other","aria-labelledby","willChange","a11yProps","TabsLayout","currentTabIndex","setCurrentTabIndex","changeUrl","CssBaseline","onChangeIndex","Tabs","indicatorColor","textColor","TabIndicatorProps","Tab","CustomNavLink","to","CustomLink","forwardRef","linkProps","About","drawerWidth","drawer","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","hide","flexShrink","drawerPaper","contentShift","logo","DesktopLayout","setOpen","useLocation","handleDrawerClose","clsx","edge","noWrap","Drawer","List","activeStyle","borderRight","ListItemIcon","ListItemText","Alert","LogMessage","handleCloseSnackbar","Snackbar","autoHideDuration","darkTheme","createMuiTheme","LayoutContainer","isDesktop","locationParams","ThemeProvider","useCleanCache","cleanCache","caches","keys","then","names","namesArr","delete","App","render","getElementById","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c642f559.chunk.js","sourcesContent":["export default {\r\n     SET_MP_GRID_COLUMNS: 'SET_MP_GRID_COLUMNS',\r\n     SET_OPEN_MP_SIDE_BAR: 'SET_OPEN_MP_SIDE_BAR',\r\n     SET_SELECTED_ITEM: 'SET_SELECTED_ITEM',\r\n     FIRST_SET_PLAYLISTS: 'FIRST_SET_PLAYLISTS',\r\n     RENAME_PLAYLIST: 'RENAME_PLAYLIST',\r\n     SET_WS: 'SET_WS',\r\n     SET_SELECTED_MP: 'SET_SELECTED_MP',\r\n     SET_MEDIA_PLAYERS: 'SET_MEDIA_PLAYERS',\r\n     CLOSE_WS_CONNECT: 'CLOSE_WS_CONNECT',\r\n     SET_STATUS: 'SET_STATUS',\r\n     SET_ITEMS_TIME: 'SET_ITEMS_TIME',\r\n     DELETE_PLAYLIST: 'DELETE_PLAYLIST',\r\n     UPDATE_PLAYLISTS: 'UPDATE_PLAYLISTS',\r\n     SET_SELECTED_PLAYLIST: 'SET_SELECTED_PLAYLIST',\r\n     UPDATE_MEDIA_ITEMS: 'UPDATE_MEDIA_ITEMS',\r\n     SET_PLAYLISTS: 'SET_PLAYLISTS',\r\n     RENAME_MEDIA_PLAYERS: 'RENAME_MEDIA_PLAYERS',\r\n     SET_SELECTED_FILES: 'SET_SELECTED_FILES',\r\n     SET_ML_LISTS: 'SET_ML_LISTS',\r\n     SET_SELECTED_ML_LIST: 'SET_SELECTED_ML_LIST',\r\n     SET_IP_PORT: 'SET_IP_PORT',\r\n     IS_CONNECTED: 'IS_CONNECTED',\r\n     SET_COMBO_LIST: 'SET_COMBO_LIST',\r\n     SET_SELECTED_WIDGET: 'SET_SELECTED_WIDGET',\r\n     SET_WIDGETS_XML: 'SET_WIDGETS_XML',\r\n     SET_WIDGETS_LIST: 'SET_WIDGETS_LIST',\r\n     UPDATE_REACT_WIDGET_TREE: 'UPDATE_REACT_WIDGET_TREE',\r\n     SERVER_VALUE_CHANGED: 'SERVER_VALUE_CHANGED',\r\n     PRAMS_DIFF: 'PRAMS_DIFF',\r\n     NODES_PARAMS: 'NODES_PARAMS',\r\n     SET_REGISTERED_PARAMS: 'SET_REGISTERED_PARAMS',\r\n     SET_COMBO_BOX_TO_FILL: 'SET_COMBO_BOX_TO_FILL',\r\n     UPDATE_MP_VOLUME: 'UPDATE_MP_VOLUME',\r\n     SHOW_LOG_MSG: 'SHOW_LOG_MSG',\r\n     HIDE_LOG_MSG: 'HIDE_LOG_MSG',\r\n     CLEAN_REGISTERED_PARAMS: 'CLEAN_REGISTERED_PARAMS',\r\n };\r\n","const renameItem = (name) => {\r\n    const index = name.lastIndexOf('/');\r\n    return name.slice(index + 1).replace(/.rva|.erva|.edvi|.edv/g, '');\r\n};\r\nexport default renameItem;\r\n","const debounce = (func, delay = 500) => {\r\n    let timeout;\r\n    return function (...args) {\r\n        const context = this;\r\n        if (timeout) clearTimeout(timeout);\r\n        timeout = setTimeout(() => {\r\n            timeout = null;\r\n            func.apply(context, args);\r\n        }, delay);\r\n    };\r\n};\r\nexport default debounce;\r\n","import cloneDeep from 'lodash/cloneDeep';\r\nimport ACTION_TYPES from 'constants/ACTION_TYPES';\r\n\r\nexport const initialWidgetsStore = {\r\n  widgetsList: [],\r\n  widgetsURL: null,\r\n  selectedWidget: null,\r\n  widgetsXML: null,\r\n  ws: null,\r\n  updateReactWidgetTree: 0,\r\n  comboLists: [],\r\n  updatedParams: [],\r\n  disabledElements: [],\r\n  nodesParams: null,\r\n  registeredParameters: [],\r\n  comboBoxToFill: [],\r\n};\r\n\r\nexport const widgetsReducer = (store, { type, payload }) => {\r\n  switch (type) {\r\n    case ACTION_TYPES.CLOSE_WS_CONNECT: {\r\n      return {\r\n        ...initialWidgetsStore,\r\n        selectedWidget: store.selectedWidget,\r\n      };\r\n    }\r\n    case ACTION_TYPES.SET_COMBO_LIST: {\r\n      const forrmattedComboList = payload[0].comboList.map((value) => (value === '' ? 'None' : value));\r\n      return { ...store, comboLists: [...store.comboLists, { ...payload[0], comboList: forrmattedComboList }] };\r\n    }\r\n    case ACTION_TYPES.SET_SELECTED_WIDGET: {\r\n        return { ...store, selectedWidget: payload };\r\n    }\r\n    case ACTION_TYPES.SET_WIDGETS_XML: {\r\n      return { ...store, widgetsXML: payload };\r\n    }\r\n    case ACTION_TYPES.SET_WIDGETS_LIST: {\r\n      const widgetsList = payload.wizardsList.map((item) => ({ value: item, label: item }));\r\n      return {\r\n        ...store,\r\n        widgetsList,\r\n        widgetsXML: null,\r\n        widgetsURL: payload.wizardsURL,\r\n      };\r\n    }\r\n    case ACTION_TYPES.SET_WS: {\r\n      return { ...store, ws: payload };\r\n    }\r\n    case ACTION_TYPES.UPDATE_REACT_WIDGET_TREE: {\r\n      return { ...store, updateReactWidgetTree: store.updateReactWidgetTree + 1 };\r\n    }\r\n    case ACTION_TYPES.SERVER_VALUE_CHANGED: {\r\n      return { ...store, updatedParams: payload };\r\n    }\r\n    case ACTION_TYPES.PRAMS_DIFF: {\r\n      if (store?.selectedWidget?.includes(payload[1]) && payload[2] !== 'source') {\r\n        return { ...store, disabledElements: payload };\r\n      }\r\n      return store;\r\n    }\r\n    case ACTION_TYPES.NODES_PARAMS: {\r\n      return { ...store, nodesParams: cloneDeep(payload) };\r\n    }\r\n    case ACTION_TYPES.SET_REGISTERED_PARAMS: {\r\n      return { ...store, registeredParameters: [...store.registeredParameters, payload] };\r\n    }\r\n    case ACTION_TYPES.CLEAN_REGISTERED_PARAMS: {\r\n      return { ...store, registeredParameters: [] };\r\n    }\r\n    case ACTION_TYPES.SET_COMBO_BOX_TO_FILL: {\r\n        return { ...store, comboBoxToFill: [...store.comboBoxToFill, payload] };\r\n    }\r\n    default:\r\n      return store;\r\n  }\r\n};\r\n"," const notEmptyObj = (value) => {\r\n    let key;\r\n\r\n    if (Array.isArray(value)) {\r\n        return value.length > 0;\r\n    } if (!!value && typeof value === 'object' && value.constructor === Object) {\r\n        for (key in value) {\r\n            return true;\r\n        }\r\n        return false;\r\n    } if (typeof value === 'string') {\r\n        return value.length > 0;\r\n    }\r\n    return value != null;\r\n};\r\nexport default notEmptyObj;\r\n","import mapKeysDeep from 'deepdash-es/mapKeysDeep';\r\nimport findDeep from 'deepdash-es/findDeep';\r\nimport filterDeep from 'deep-filter';\r\nimport notEmptyObj from 'lib/utils/notEmptyObj';\r\nimport ACTION_TYPES from 'constants/ACTION_TYPES';\r\n\r\nexport const initialMPStore = {\r\n    mediaPlayers: [],\r\n    ws: null,\r\n    playlists: [],\r\n    MPGridColumns: +localStorage.getItem('MPGridColumns') || 4,\r\n    openMPSideBar: false,\r\n    selectedMP: null,\r\n    currentPlayingItemId: null,\r\n    currentPlayingPlaylistId: null,\r\n    currentPlayingItem: {},\r\n    selectedItem: null,\r\n    selectedPlaylist: null,\r\n    openMobileMPSideBar: false,\r\n    statusTransportControl: null,\r\n    isCurrentPlayingPlaylist: null,\r\n};\r\n\r\nexport const MPReducer = (store, { type, payload }) => {\r\n    switch (type) {\r\n        case ACTION_TYPES.UPDATE_MP_VOLUME: {\r\n            if (store.selectedMP.label === payload[1]) {\r\n                return { ...store, selectedMP: { ...store.selectedMP, volume: payload[3][1] } };\r\n            }\r\n            return store;\r\n        }\r\n        case ACTION_TYPES.SET_MP_GRID_COLUMNS: {\r\n            localStorage.setItem('MPGridColumns', payload);\r\n            return { ...store, MPGridColumns: payload };\r\n        }\r\n        case ACTION_TYPES.SET_OPEN_MP_SIDE_BAR: {\r\n            return { ...store, ...payload };\r\n        }\r\n        case ACTION_TYPES.SET_SELECTED_MP: {\r\n            const selectedMP = store.mediaPlayers.find((item) => item.value === payload);\r\n            return {\r\n                ...store, playlists: [], selectedPlaylist: null, selectedMP,\r\n            };\r\n        }\r\n        case ACTION_TYPES.SET_SELECTED_ITEM: {\r\n            return { ...store, selectedItem: payload };\r\n        }\r\n        case ACTION_TYPES.SET_SELECTED_PLAYLIST: {\r\n            return {\r\n                ...store,\r\n                selectedPlaylist: payload,\r\n                isCurrentPlayingPlaylist: payload.id === store.currentPlayingPlaylistId,\r\n                selectedItem: null,\r\n            };\r\n        }\r\n        case ACTION_TYPES.FIRST_SET_PLAYLISTS: {\r\n            return { ...store, playlists: payload };\r\n        }\r\n        case ACTION_TYPES.RENAME_PLAYLIST: {\r\n            const updatedPlaylists = mapKeysDeep(store.playlists,\r\n                (value, key, parent) => {\r\n                    if (key === 'id' && value === payload[0] && (parent.type === 0 || parent.type === 1)) {\r\n                        parent.label = payload[1];\r\n                        parent.value = parent.id + payload[1];\r\n                    }\r\n                    return key;\r\n                });\r\n            return {\r\n                ...store,\r\n                selectedPlaylist: store.selectedPlaylist.id === payload[0]\r\n                    ? { ...store.selectedPlaylist, label: payload[1], value: payload[0] + payload[1] } : store.selectedPlaylist,\r\n                playlists: updatedPlaylists,\r\n            };\r\n        }\r\n        case ACTION_TYPES.SET_WS: {\r\n            return { ...store, ws: payload };\r\n        }\r\n        case ACTION_TYPES.SET_MEDIA_PLAYERS: {\r\n            return { ...store, ...payload };\r\n        }\r\n        case ACTION_TYPES.CLOSE_WS_CONNECT: {\r\n            return {\r\n                ...store, ws: null,\r\n            };\r\n        }\r\n        case ACTION_TYPES.SET_STATUS: {\r\n            if (store.currentPlayingItemId !== payload.currentPlayingItemId\r\n                || store.currentPlayingPlaylistId !== payload.currentPlayingPlaylistId\r\n                || !store.currentPlayingItem?.timeAmount) {\r\n                const playingPlaylist = findDeep(store.playlists, (value, key, parent) => {\r\n                    if (parent?.id === payload.currentPlayingPlaylistId && parent.label && parent.type) return true;\r\n                })?.parent;\r\n\r\n                if (playingPlaylist) {\r\n                    return {\r\n                      ...store,\r\n                      ...payload,\r\n                      isCurrentPlayingPlaylist: store.selectedPlaylist?.id === payload.currentPlayingPlaylistId,\r\n                      currentPlayingItem: playingPlaylist.playlist?.items.find((item) => item.id === payload.currentPlayingItemId),\r\n                    };\r\n                }\r\n                return store;\r\n            }\r\n            if (payload.statusTransportControl !== store.statusTransportControl) return { ...store, ...payload };\r\n            return store;\r\n        }\r\n        case ACTION_TYPES.SET_ITEMS_TIME: {\r\n            const formattedPlaylists = mapKeysDeep(store.playlists, (val, key, parent) => {\r\n                if (key === 'mediaFilename' && val && !parent.timeAmount) {\r\n                    const itemFile = payload.find((item) => item[0] === parent.path);\r\n                    if (itemFile) {\r\n                        parent.timeAmount = itemFile[2] / itemFile[4];\r\n                        parent.frames = itemFile[2];\r\n                        parent.fps = itemFile[4];\r\n                        parent.isImage = !!itemFile[5];\r\n                        parent.hasAudio = !!itemFile[1];\r\n                    }\r\n                }\r\n                return key;\r\n            });\r\n\r\n            const mediaFilesList = payload.map((item) => ({\r\n                path: item[0],\r\n                timeAmount: item[2] / item[4],\r\n                frames: item[2],\r\n                fps: item[4],\r\n                isImage: !!item[5],\r\n                hasAudio: !!item[1],\r\n            }));\r\n            return {\r\n                ...store,\r\n                mediaFilesList,\r\n                playlists: formattedPlaylists,\r\n            };\r\n        }\r\n        case ACTION_TYPES.DELETE_PLAYLIST: {\r\n            const res = filterDeep(store.playlists, (value, key, parent) => {\r\n                if (parent?.id === payload && (parent.type === 0 || parent.type === 1)) return false;\r\n                return true;\r\n            });\r\n            const filteredPlaylists = filterDeep(res, notEmptyObj);\r\n            const firstSelectedPlaylist = findDeep(filteredPlaylists, (value, key, parent) => {\r\n                if (parent?.type === 1) return true;\r\n            })?.parent;\r\n            return {\r\n               ...store,\r\n               playlists: filteredPlaylists,\r\n               selectedPlaylist: firstSelectedPlaylist,\r\n            };\r\n        }\r\n        case ACTION_TYPES.UPDATE_PLAYLISTS: {\r\n            if (payload.goupId) {\r\n                const updatedPlaylists = mapKeysDeep(store.playlists,\r\n                    (val, key, parent) => {\r\n                        if (val === payload.goupId && key === 'id' && parent?.type === 0) {\r\n                            if (!parent.children) {\r\n                                parent.children = [payload];\r\n                            } else parent.children.push(payload);\r\n                        }\r\n                        return key;\r\n                    }, { skipChildren: true });\r\n                return { ...store, playlists: updatedPlaylists };\r\n            }\r\n            return { ...store, playlists: [...store.playlists, payload] };\r\n        }\r\n        case ACTION_TYPES.UPDATE_MEDIA_ITEMS: {\r\n            const updatedPlaylists = mapKeysDeep(store.playlists, (val, key, parent) => {\r\n                if (parent?.id === payload.playlistId && key === 'type' && val === 1) {\r\n                    parent.playlist = {\r\n                        items: payload.items.map((newItem) => {\r\n                            const mediaFile = store.mediaFilesList.find((file) => file.path === newItem.path);\r\n                            return { ...mediaFile, ...newItem };\r\n                        }),\r\n                    };\r\n                }\r\n                return key;\r\n            });\r\n            if (store.selectedItem) {\r\n                const updatedSelectedFile = findDeep(updatedPlaylists, (value, key, parent) => {\r\n                    if (key === 'id' && value === store.selectedItem.id\r\n                        && store.selectedItem.path === parent.path && payload.playlistId === parent.playlistId) return true;\r\n                })?.parent;\r\n                return { ...store, playlists: updatedPlaylists, selectedItem: updatedSelectedFile };\r\n            }\r\n            return { ...store, playlists: updatedPlaylists };\r\n        }\r\n        case ACTION_TYPES.SET_PLAYLISTS: {\r\n            return { ...store, playlists: payload };\r\n        }\r\n        case ACTION_TYPES.RENAME_MEDIA_PLAYERS: {\r\n            const newMediaPlayers = store.mediaPlayers.map((item) => (item.label === payload[0]\r\n                ? { ...item, label: payload[1], value: payload[1] } : item));\r\n            return {\r\n                ...store,\r\n                mediaPlayers: newMediaPlayers,\r\n                selectedMP: { ...store.selectedMP, label: payload[0], value: payload[0] },\r\n            };\r\n        }\r\n        default:\r\n            return store;\r\n    }\r\n};\r\n","import ACTION_TYPES from 'constants/ACTION_TYPES';\r\n\r\nexport const initialMPStatusStore = {\r\n    currentPlayingProgress: null,\r\n};\r\n\r\nexport const MPStatusReducer = (store, { type, payload }) => {\r\n    switch (type) {\r\n        case ACTION_TYPES.SET_STATUS: {\r\n            return { ...store, ...payload };\r\n        }\r\n        default:\r\n            return store;\r\n    }\r\n};\r\n","export default {\r\n    ERROR_MSG: 5,\r\n    WARNING_MSG: 4,\r\n    INFO_MSG: 3,\r\n};\r\n","import ACTION_TYPES from 'constants/ACTION_TYPES';\r\nimport NODES_LOG_LEVEL from 'constants/enums/NODES_LOG_LEVEL';\r\n\r\nexport const initialMainStore = {\r\n    ip: null,\r\n    logMsg: {\r\n        showLogMsg: false, from: null, msg: null, severity: null, duration: 0,\r\n    },\r\n    isConnected: false,\r\n    port: null,\r\n};\r\n\r\nexport const mainReducer = (store, { type, payload }) => {\r\n    switch (type) {\r\n        case ACTION_TYPES.SET_IP_PORT: {\r\n            return { ...store, ...payload };\r\n        }\r\n        case ACTION_TYPES.IS_CONNECTED: {\r\n            return {\r\n                 ...store,\r\n                isConnected: true,\r\n                logMsg: {\r\n                    showLogMsg: true, duration: 2000, msg: 'Server is connected.', severity: 'success',\r\n                },\r\n            };\r\n        }\r\n        case ACTION_TYPES.IS_DISCONNECTED: {\r\n            return {\r\n                 ...store,\r\n                isConnected: false,\r\n                logMsg: {\r\n                    showLogMsg: true, duration: 10000, msg: 'Server is disconnected.', severity: 'error',\r\n                },\r\n            };\r\n        }\r\n        case ACTION_TYPES.SHOW_LOG_MSG: {\r\n           let severity = null;\r\n           if (NODES_LOG_LEVEL.ERROR_MSG === payload[2]) severity = 'error';\r\n           if (NODES_LOG_LEVEL.WARNING_MSG === payload[2]) severity = 'warning';\r\n           if (NODES_LOG_LEVEL.INFO_MSG === payload[2]) severity = 'info';\r\n\r\n           if (severity) {\r\n               return {\r\n                   ...store,\r\n                   logMsg: {\r\n                       showLogMsg: true, from: payload[1], msg: payload[3], severity,\r\n                   },\r\n               };\r\n           }\r\n           return store;\r\n        }\r\n        case ACTION_TYPES.HIDE_LOG_MSG: {\r\n            return {\r\n                ...store,\r\n                logMsg: {\r\n                    ...store.logMsg, showLogMsg: false,\r\n                },\r\n            };\r\n        }\r\n        default: {\r\n            return store;\r\n        }\r\n    }\r\n};\r\n","import mapKeysDeep from 'deepdash-es/mapKeysDeep';\r\nimport renameItem from 'lib/utils/renameItem';\r\nimport ACTION_TYPES from 'constants/ACTION_TYPES';\r\n\r\nexport const initialMLStore = {\r\n    selectedFolder: {},\r\n    selectedFiles: [],\r\n    playlistItems: [],\r\n    MLFoldersTree: [],\r\n};\r\n\r\nexport const MLReducer = (store, { type, payload }) => {\r\n    switch (type) {\r\n        case ACTION_TYPES.SET_SELECTED_FILES: {\r\n            return { ...store, selectedFiles: payload };\r\n        }\r\n        case ACTION_TYPES.SET_ML_LISTS: {\r\n            if (store.playlistItems.length !== payload.length) {\r\n                const filteredItems = payload.filter((item) => item[2] > 0);\r\n                const playlistItems = filteredItems.map((item) => ({ path: item[0], timeAmount: item[2] / item[4] }));\r\n                const dirs = payload.filter((item) => item[2] === 0);\r\n                const dirsPathArr = dirs.map((item) => item[0].split('/'));\r\n                const objTree = [];\r\n                dirsPathArr.forEach((path) => {\r\n                    path.reduce((level, key) => {\r\n                        let temp = level.find(({ value }) => key === value);\r\n                        if (!temp) {\r\n                            temp = { value: key, label: key, children: [] };\r\n                            level.push(temp);\r\n                        }\r\n                        return temp.children;\r\n                    }, objTree);\r\n                });\r\n                const MLFoldersTree = mapKeysDeep(objTree, (value, key, parent) => {\r\n                   if (key === 'value') {\r\n                      parent.mediaFiles = playlistItems.reduce((acc, item, i) => {\r\n                          if (item.path.includes(parent[key])) {\r\n                              return [...acc, {\r\n                                  path: item.path,\r\n                                  index: i,\r\n                                  id: i,\r\n                                  fileName: renameItem(item.path),\r\n                                  timeAmount: item.timeAmount,\r\n                              }];\r\n                          }\r\n                          return acc;\r\n                      }, []);\r\n                   }\r\n                   if (key === 'children' && value.length === 0) parent.children = null;\r\n\r\n                    return key;\r\n                });\r\n                return { ...store, MLFoldersTree };\r\n            }\r\n            return store;\r\n        }\r\n        case ACTION_TYPES.SET_SELECTED_ML_LIST: {\r\n            return { ...store, selectedFolder: payload };\r\n        }\r\n        default:\r\n            return store;\r\n    }\r\n};\r\n","import React, {\r\n useContext, useReducer, createContext, useMemo,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { widgetsReducer, initialWidgetsStore } from '../reducers/widgetsReducer';\r\nimport { MPReducer, initialMPStore } from '../reducers/MPReducer';\r\nimport { MPStatusReducer, initialMPStatusStore } from '../reducers/MPStatusReducer';\r\nimport { mainReducer, initialMainStore } from '../reducers/mainReducer';\r\nimport { MLReducer, initialMLStore } from '../reducers/MLReducer';\r\n\r\n// Main store\r\nconst MainContext = createContext();\r\nexport const useMainStore = () => useContext(MainContext);\r\n// ML store\r\nconst MLContext = createContext();\r\nexport const useMLStore = () => useContext(MLContext);\r\n\r\n// MP main store\r\nconst MPContext = createContext();\r\nexport const useMPStore = () => useContext(MPContext);\r\n\r\n// MP status store\r\nconst MPStatusContext = createContext();\r\nexport const useMPStatusStore = () => useContext(MPStatusContext);\r\n\r\n// Widgets store\r\nconst WidgetsContext = createContext();\r\nexport const useWidgetsStore = () => useContext(WidgetsContext);\r\n\r\nconst ProviderStore = ({ children }) => {\r\n  const [widgetsStore, dispatchWidgetsStore] = useReducer(widgetsReducer, initialWidgetsStore);\r\n  const [MPStore, dispatchMPStore] = useReducer(MPReducer, initialMPStore);\r\n  const [MPStatusStore, dispatchMPStatusStore] = useReducer(MPStatusReducer, initialMPStatusStore);\r\n  const [mainStore, dispatchMainStore] = useReducer(mainReducer, initialMainStore);\r\n  const [MLStore, dispatchMLStore] = useReducer(MLReducer, initialMLStore);\r\n\r\n  const widgetsTools = useMemo(() => ([widgetsStore, dispatchWidgetsStore]), [widgetsStore]);\r\n  const MPTools = useMemo(() => ([MPStore, dispatchMPStore]), [MPStore]);\r\n  const MPStatusStoreTools = useMemo(() => ([MPStatusStore, dispatchMPStatusStore]), [MPStatusStore]);\r\n  const mainStoreTools = useMemo(() => ([mainStore, dispatchMainStore]), [mainStore]);\r\n  const MLStoreTools = useMemo(() => ([MLStore, dispatchMLStore]), [MLStore]);\r\n\r\n  return (\r\n    <MLContext.Provider value={MLStoreTools}>\r\n      <MainContext.Provider value={mainStoreTools}>\r\n        <MPContext.Provider value={MPTools}>\r\n          <MPStatusContext.Provider value={MPStatusStoreTools}>\r\n            <WidgetsContext.Provider value={widgetsTools}>\r\n              {children}\r\n            </WidgetsContext.Provider>\r\n          </MPStatusContext.Provider>\r\n        </MPContext.Provider>\r\n      </MainContext.Provider>\r\n    </MLContext.Provider>\r\n  );\r\n};\r\nProviderStore.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\nexport default ProviderStore;\r\n","const stringifyWithFloats = (msg, targetValues = []) => {\r\n    const beginFloat = '~begin~float~';\r\n    const endFloat = '~end~float~';\r\n    let globalIterIndex = 0;\r\n\r\n    const jsonReplacer = (key, value) => {\r\n        const isTarget = targetValues.includes(globalIterIndex);\r\n\r\n        if (isTarget && typeof value === 'number') {\r\n            const indexElem = targetValues.indexOf(globalIterIndex);\r\n            if (indexElem > -1) targetValues.splice(indexElem, 1);\r\n            ++globalIterIndex;\r\n            return `${beginFloat}${value}${endFloat}`;\r\n        }\r\n        ++globalIterIndex;\r\n        return value;\r\n    };\r\n    const regexReplacer = (match, num) => ((num.includes('.') || Number.isNaN(num)) ? num : `${num}.0`);\r\n    const json = JSON.stringify(msg, jsonReplacer);\r\n    const regExp = new RegExp(`\"${beginFloat}(.+?)${endFloat}\"`, 'g');\r\n\r\n    return json.replace(regExp, regexReplacer);\r\n};\r\nexport default stringifyWithFloats;\r\n","import stringifyWithFloats from 'lib/utils/stringifyWithFloats';\r\nimport MP_CMD from 'constants/MP_CMD';\r\n\r\nconst createItemSettingsMsg = ({\r\n     selectedMP, selectedPlaylistId, selectedItem, label = '_nc_', infinityLoop = -1,\r\n     loops = -1, muted = -1, volume = -1, pauseOnStart = -1, pauseOnEnd = -1, fadeIn = -1,\r\n}, targetValues = [9]) => stringifyWithFloats([\r\n    `${selectedMP.label}/${MP_CMD.SET_ITEMS_PARAMS}`, selectedPlaylistId, 1, selectedItem.index,\r\n    ['_nc_', label, -1, volume, muted, 0, '_nc_', [4, 0, 0, 255, 255, 4, 0, 0, 255, 255, 4, 0, 0,\r\n    255, 255, 4, 0, 0, 255, 255, 2147483647, 2147483647, 2147483647], -1, '_nc_', 0, 1, -1, -1, -1,\r\n    0, -1, 0, -1, -1, -1, -1, [loops, infinityLoop, pauseOnStart, pauseOnEnd, -1, -1, fadeIn, -1, -1, -1, -1], -1]], targetValues);\r\n\r\nexport default createItemSettingsMsg;\r\n","import React, {\r\n useState, useEffect, useRef, useMemo,\r\n} from 'react';\r\nimport {\r\n Paper, Slider, Switch, FormControlLabel, Typography, IconButton,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport { useMPStore } from 'store/ProviderStore';\r\nimport createItemSettingsMsg from 'lib/utils/createItemSettingsMsg';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Input, InputNumber, InputGroup } from 'rsuite';\r\nimport debounce from 'lib/utils/debounce';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flex: 1,\r\n        textAlign: 'center',\r\n        paddingTop: theme.spacing(1),\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n        paddingBottom: theme.spacing(1),\r\n    },\r\n    input: {\r\n        width: '60% !important',\r\n        textAlign: 'left',\r\n        '& .rs-input-number-btn-group-vertical': {\r\n            display: 'none',\r\n        },\r\n        '& input': {\r\n            textAlign: 'center',\r\n        },\r\n    },\r\n    FormControlLabel: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        marginBottom: theme.spacing(1),\r\n        width: '100%',\r\n        marginLeft: '0',\r\n\r\n    },\r\n    FormControlLabelSwitch: {\r\n        marginBottom: theme.spacing(1),\r\n        display: 'flex',\r\n        marginLeft: '0',\r\n    },\r\n    Slider: {\r\n        width: '80%',\r\n    },\r\n    flexContainerColumn: {\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n    },\r\n    flexWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    label: {\r\n        color: (props) => !props.selectedItem && '#ffffff80',\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    volumeWrapper: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n}));\r\n\r\nconst ItemSettings = () => {\r\n    const [{\r\n       ws, selectedItem, selectedMP, selectedPlaylist,\r\n    }] = useMPStore();\r\n    const classes = useStyles({ selectedItem });\r\n    const { t } = useTranslation();\r\n    const [volumeValue, setVolumeValue] = useState(0);\r\n    const [label, setLabel] = useState('');\r\n    const [fadeIn, setFadeIn] = useState(0);\r\n    const [pauseOnStart, setPauseOnStart] = useState(false);\r\n    const [pauseOnEnd, setPauseOnEnd] = useState(false);\r\n    const [infinityLoop, setInfinityLoop] = useState(false);\r\n    const [loops, setLoops] = useState(0);\r\n    const inputLoopRef = useRef(null);\r\n    const inputFadeInRef = useRef(null);\r\n    const commonParams = {\r\n        ws, selectedMP, selectedPlaylistId: selectedPlaylist?.id, selectedItem,\r\n    };\r\n\r\n    const setSettingsValue = (params) => params.ws.send(createItemSettingsMsg(params));\r\n    const sendDebouncedValue = useRef(debounce(setSettingsValue));\r\n\r\n    const handleLabelChange = (newValue) => {\r\n        if (ws) {\r\n            setLabel(newValue);\r\n            sendDebouncedValue.current({\r\n                label: newValue, ...commonParams,\r\n            });\r\n        }\r\n    };\r\n    const handleFadeInMinus = (notDisabled) => {\r\n        if (ws && notDisabled) inputFadeInRef.current.handleMinus();\r\n    };\r\n    const handleFadeInPlus = (notDisabled) => {\r\n        if (ws && notDisabled) inputFadeInRef.current.handlePlus();\r\n    };\r\n    const handleFadeInChange = (newValue) => {\r\n        setFadeIn(newValue);\r\n        if (newValue >= 0 && newValue <= selectedItem.timeAmount) {\r\n            sendDebouncedValue.current({\r\n                fadeIn: newValue * 1000000, ...commonParams,\r\n            });\r\n        }\r\n    };\r\n    const handleLoopsChange = (newValue) => {\r\n        if (ws) {\r\n            setLoops(newValue);\r\n            if (newValue >= 1) {\r\n               sendDebouncedValue.current({\r\n                  loops: +newValue, ...commonParams,\r\n              });\r\n           }\r\n        }\r\n    };\r\n    const handlePauseOnStartChange = (e, checked) => {\r\n        if (ws) {\r\n            const newValue = checked ? 1 : 0;\r\n            ws.send(createItemSettingsMsg({\r\n                pauseOnStart: newValue, ...commonParams,\r\n            }));\r\n            setPauseOnStart(checked);\r\n        }\r\n    };\r\n    const handlePauseOnEndChange = (e, checked) => {\r\n        if (ws) {\r\n            ws.send(createItemSettingsMsg({\r\n                pauseOnEnd: checked ? 1 : 0, ...commonParams,\r\n            }));\r\n            setPauseOnEnd(checked);\r\n        }\r\n    };\r\n    const handleInfinityLoopChange = (e, checked) => {\r\n        if (ws) {\r\n            ws.send(createItemSettingsMsg({\r\n                infinityLoop: checked ? 1 : 0, ...commonParams,\r\n            }));\r\n            setInfinityLoop(checked);\r\n        }\r\n    };\r\n    const handleLoopsMinus = (disabled) => {\r\n        if (ws && !disabled) {\r\n            inputLoopRef.current.handleMinus();\r\n        }\r\n    };\r\n    const handleLoopsPlus = (disabled) => {\r\n        if (ws && !disabled) {\r\n            inputLoopRef.current.handlePlus();\r\n        }\r\n    };\r\n    const handleVolumeChange = (e, newValue) => setVolumeValue(newValue);\r\n    const handleVolumeChangeCommitted = (e, newValue) => {\r\n        if (ws) {\r\n            ws.send(createItemSettingsMsg({\r\n                volume: newValue / 100, ...commonParams,\r\n            }));\r\n        }\r\n    };\r\n    const handleMutedChange = () => {\r\n        if (ws) {\r\n            ws.send(createItemSettingsMsg({\r\n                muted: selectedItem?.muted ? 0 : 1, ...commonParams,\r\n            }));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setVolumeValue(selectedItem?.volume * 100);\r\n    }, [selectedItem?.volume]);\r\n    useEffect(() => {\r\n        setPauseOnStart(!!selectedItem?.pauseOnStart);\r\n    }, [selectedItem?.pauseOnStart]);\r\n    useEffect(() => {\r\n        setPauseOnEnd(!!selectedItem?.pauseOnEnd);\r\n    }, [selectedItem?.pauseOnStart]);\r\n    useEffect(() => {\r\n        setLoops(selectedItem?.loops);\r\n    }, [selectedItem?.loops]);\r\n    useEffect(() => {\r\n        if (selectedItem?.fadeIn >= 0) setFadeIn(selectedItem.fadeIn);\r\n    }, [selectedItem?.fadeIn]);\r\n    useEffect(() => {\r\n        setLabel(selectedItem?.label);\r\n    }, [selectedItem?.label]);\r\n    useEffect(() => {\r\n        setInfinityLoop(!!selectedItem?.infinityLoop);\r\n    }, [selectedItem?.infinityLoop]);\r\n\r\n    return useMemo(() => (\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h6\">{t('Item Settings')}</Typography>\r\n        <div className={classes.flexContainerColumn}>\r\n          <FormControlLabel\r\n            disabled={!selectedItem}\r\n            className={classes.FormControlLabel}\r\n            control={<Input className={classes.input} size=\"sm\" />}\r\n            onChange={handleLabelChange}\r\n            label={`${t('Label')}:`}\r\n            value={label || ''}\r\n            labelPlacement=\"start\"\r\n          />\r\n          <FormControlLabel\r\n            disabled={!selectedItem}\r\n            className={classes.FormControlLabel}\r\n            value=\"\"\r\n            control={(\r\n              <InputGroup className={classes.input}>\r\n                <InputGroup.Button onClick={() => handleFadeInMinus(selectedItem)}>\r\n                  -\r\n                </InputGroup.Button>\r\n                <InputNumber\r\n                  disabled={!selectedItem}\r\n                  size=\"sm\"\r\n                  value={(fadeIn || fadeIn === '') ? fadeIn : 0}\r\n                  onChange={handleFadeInChange}\r\n                  ref={inputFadeInRef}\r\n                  step={0.5}\r\n                  postfix=\"s\"\r\n                  min={0}\r\n                />\r\n                <InputGroup.Button onClick={() => handleFadeInPlus(selectedItem)}>\r\n                  +\r\n                </InputGroup.Button>\r\n              </InputGroup>\r\n              )}\r\n            label={`${t('Fade in')}:`}\r\n            labelPlacement=\"start\"\r\n          />\r\n          <FormControlLabel\r\n            disabled={!selectedItem}\r\n            className={classes.FormControlLabelSwitch}\r\n            control={<Switch />}\r\n            label={`${t('Pause on start')}:`}\r\n            checked={pauseOnStart}\r\n            onChange={handlePauseOnStartChange}\r\n            labelPlacement=\"start\"\r\n          />\r\n          <FormControlLabel\r\n            disabled={!selectedItem}\r\n            className={classes.FormControlLabelSwitch}\r\n            checked={pauseOnEnd}\r\n            control={<Switch />}\r\n            label={`${t('Pause on end')}:`}\r\n            onChange={handlePauseOnEndChange}\r\n            labelPlacement=\"start\"\r\n          />\r\n          <FormControlLabel\r\n            disabled={!selectedItem || !!selectedItem?.infinityLoop}\r\n            className={classes.FormControlLabel}\r\n            value=\"\"\r\n            control={(\r\n              <InputGroup className={classes.input}>\r\n                <InputGroup.Button onClick={() => handleLoopsMinus(!selectedItem || !!selectedItem?.infinityLoop)}>-</InputGroup.Button>\r\n                <InputNumber\r\n                  size=\"sm\"\r\n                  value={loops > 0 || loops === '' ? loops : 1}\r\n                  onChange={handleLoopsChange}\r\n                  ref={inputLoopRef}\r\n                  min={0}\r\n                />\r\n                <InputGroup.Button onClick={() => handleLoopsPlus(!selectedItem || !!selectedItem?.infinityLoop)}>+</InputGroup.Button>\r\n              </InputGroup>\r\n            )}\r\n            label={`${t('Loops')}:`}\r\n            labelPlacement=\"start\"\r\n          />\r\n          <FormControlLabel\r\n            disabled={!selectedItem}\r\n            className={classes.FormControlLabelSwitch}\r\n            control={<Switch />}\r\n            label={`${t('Infinity loop')}:`}\r\n            checked={infinityLoop}\r\n            onChange={handleInfinityLoopChange}\r\n            labelPlacement=\"start\"\r\n          />\r\n          <div className={classes.flexWrapper}>\r\n            <Typography className={classes.label}>{`${t('Volume')}:`}</Typography>\r\n            {selectedItem?.muted ? (\r\n              <IconButton onClick={handleMutedChange}>\r\n                <VolumeOffIcon color={!selectedItem ? 'disabled' : 'inherit'} />\r\n              </IconButton>\r\n              ) : (\r\n                <IconButton onClick={handleMutedChange}>\r\n                  <VolumeUpIcon color={!selectedItem ? 'disabled' : 'inherit'} />\r\n                </IconButton>\r\n              )}\r\n            <Slider\r\n              className={classes.Slider}\r\n              disabled={!selectedItem || !!selectedItem?.muted}\r\n              onChange={handleVolumeChange}\r\n              onChangeCommitted={handleVolumeChangeCommitted}\r\n              value={volumeValue}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n    ), [ws, classes, pauseOnStart, pauseOnEnd, infinityLoop,\r\n        label, loops, t, fadeIn, volumeValue, selectedItem, selectedMP, selectedPlaylist]);\r\n};\r\nexport default ItemSettings;\r\n","import React, {\r\n useEffect, useState, useMemo,\r\n} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport {\r\n Box, IconButton, Button, Typography, Zoom, Divider,\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Input, TreePicker } from 'rsuite';\r\nimport { useMPStore } from 'store/ProviderStore';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport setLocationParams from 'lib/utils/setLocationParams';\r\nimport queryString from 'query-string';\r\nimport findDeep from 'deepdash-es/findDeep';\r\nimport MP_CMD from 'constants/MP_CMD';\r\nimport ACTION_TYPES from 'constants/ACTION_TYPES';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    flexWrapper: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-start',\r\n      fontSize: '15px',\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(0.5),\r\n    },\r\n    iconButton: {\r\n        color: 'white',\r\n        width: '30px',\r\n        height: '30px',\r\n    },\r\n    message: {\r\n        width: '90%',\r\n    },\r\n    inputRename: {\r\n        marginRight: theme.spacing(1),\r\n        textAlign: 'left',\r\n    },\r\n    playlistLabel: {\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        display: 'webkit-box',\r\n        webKitLineClamp: 3,\r\n        webKitBoxOrient: 'vertical',\r\n        whiteSpace: 'nowrap',\r\n        fontSize: '13px',\r\n    },\r\n    addBtn: {\r\n        width: '95%',\r\n        margin: theme.spacing(1),\r\n    },\r\n    warningMsg: {\r\n        width: '90%',\r\n    },\r\n    marginLeft: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst MPPlaylists = () => {\r\n    const classes = useStyles();\r\n    const [{\r\n      playlists, ws, selectedPlaylist, selectedMP,\r\n    }, dispatchMPStore] = useMPStore();\r\n    const { t } = useTranslation();\r\n    const history = useHistory();\r\n    const { page } = queryString.parse(window.location.search);\r\n    const [playlistForRemove, setPlaylistForRemove] = useState(null);\r\n    const [playlistForRename, setPlaylistForRename] = useState(null);\r\n    const [newPlaylistName, setNewPlaylistName] = useState(null);\r\n\r\n    const handleSelect = (selectedNode) => {\r\n        dispatchMPStore({ type: ACTION_TYPES.SET_SELECTED_PLAYLIST, payload: selectedNode });\r\n        setLocationParams({\r\n            page, history, params: { playlistId: selectedNode?.id },\r\n        });\r\n    };\r\n    const removeConfirmation = (e, nodeData) => {\r\n        e.stopPropagation();\r\n       if (playlists.length > 1) setPlaylistForRemove((prev) => (prev?.id !== nodeData.id ? nodeData : null));\r\n    };\r\n    const renameEditor = (e, nodeData) => {\r\n        e.stopPropagation();\r\n        setNewPlaylistName(null);\r\n        setPlaylistForRename((prev) => (prev?.id !== nodeData.id ? nodeData : null));\r\n    };\r\n    const handleRemove = () => {\r\n        if (ws) ws.send(JSON.stringify([`${selectedMP.label}/${MP_CMD.GROUP_ITEM_REMOVE}`, playlistForRemove.id]));\r\n        setPlaylistForRemove(null);\r\n    };\r\n    const handleRename = (e) => {\r\n        e.preventDefault();\r\n        if (ws && newPlaylistName) ws.send(JSON.stringify([`${selectedMP.label}/${MP_CMD.GROUP_ITEM_RENAME}`, playlistForRename.id, newPlaylistName]));\r\n        setPlaylistForRename(null);\r\n    };\r\n    const handleAddPlaylist = () => {\r\n        if (ws) ws.send(JSON.stringify([`${selectedMP.label}/${MP_CMD.GROUP_ITEM_ADD}`, 0, 1000, 1, 'Playlist', 0]));\r\n       setTimeout(() => {\r\n          const bottomEl = document.querySelector('.rs-tree-nodes');\r\n         bottomEl?.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'nearest' });\r\n       }, 100);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (page === 'media-player' && selectedPlaylist && selectedMP.label) {\r\n            setLocationParams({\r\n                page, history, params: { MP: selectedMP.label, playlistId: selectedPlaylist?.id || null },\r\n            });\r\n            return;\r\n        }\r\n        const { playlistId } = queryString.parse(window.location.search);\r\n        if (!playlists.length || selectedPlaylist?.id === +playlistId || page !== 'media-player') return;\r\n\r\n        let foundPlaylist = null;\r\n        if (playlistId) {\r\n            foundPlaylist = findDeep(playlists, (value, key, parent) => {\r\n                if ((parent.type === 1) && parent.id === +playlistId) return true;\r\n            })?.parent;\r\n        }\r\n        if (foundPlaylist) dispatchMPStore({ type: ACTION_TYPES.SET_SELECTED_PLAYLIST, payload: foundPlaylist });\r\n        else {\r\n          const firstPlaylist = findDeep(playlists, (value, key, parent) => {\r\n              if (parent.type === 1) return true;\r\n          })?.parent;\r\n          dispatchMPStore({ type: ACTION_TYPES.SET_SELECTED_PLAYLIST, payload: firstPlaylist });\r\n          setLocationParams({\r\n              page, history, params: { playlistId: firstPlaylist?.id },\r\n          });\r\n        }\r\n    }, [playlists, selectedPlaylist, selectedMP, page]);\r\n\r\n    return useMemo(() => (\r\n      <TreePicker\r\n        onSelect={handleSelect}\r\n        defaultExpandAll\r\n        placeholder={t('Select Playlist')}\r\n        data={playlists}\r\n        cleanable={false}\r\n        onClose={() => {\r\n            setPlaylistForRename(null);\r\n            setPlaylistForRemove(null);\r\n        }}\r\n        value={selectedPlaylist?.value}\r\n        renderTreeNode={(nodeData) => (\r\n          <Box>\r\n            { nodeData.id !== playlistForRename?.id && (\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Box overflow=\"hidden\" fontSize={15} display=\"flex\" alignItems=\"center\">\r\n                  {nodeData.type ? <ListIcon className={classes.icon} fontSize=\"default\" />\r\n                          : <FolderIcon className={classes.icon} fontSize=\"default\" />}\r\n                  <Typography component=\"p\" className={classes.playlistLabel}>\r\n                    {nodeData.label}\r\n                  </Typography>\r\n                </Box>\r\n                <Box display=\"flex\">\r\n                  <IconButton\r\n                    onClick={(e) => renameEditor(e, nodeData)}\r\n                    size=\"small\"\r\n                    className={classes.iconButton}\r\n                  >\r\n                    <EditIcon />\r\n                  </IconButton>\r\n                  <IconButton\r\n                    onClick={(e) => removeConfirmation(e, nodeData)}\r\n                    size=\"small\"\r\n                    className={classes.iconButton}\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n            { nodeData.id === playlistForRename?.id && (\r\n            <Zoom onClick={(e) => e.stopPropagation()} in={!!playlistForRename}>\r\n              <Box onSubmit={handleRename} component=\"form\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\" m={1}>\r\n                <Input\r\n                  autoFocus\r\n                  onChange={(newValue) => setNewPlaylistName(newValue)}\r\n                  onKeyDown={(e) => e.stopPropagation()}\r\n                  value={newPlaylistName === '' || newPlaylistName ? newPlaylistName : playlistForRename.label}\r\n                  className={classes.inputRename}\r\n                />\r\n                <Button type=\"submit\" size=\"small\" variant=\"outlined\">{t('Save')}</Button>\r\n              </Box>\r\n            </Zoom>\r\n            )}\r\n          </Box>\r\n        )}\r\n        renderValue={(value, item) => (\r\n          <Box display=\"flex\">\r\n            {item.type ? <ListIcon className={classes.icon} fontSize=\"small\" /> : <FolderIcon className={classes.icon} fontSize=\"small\" /> }\r\n            {item.label}\r\n          </Box>\r\n            )}\r\n        style={{ marginBottom: 8 }}\r\n        menuStyle={{ width: '24vw' }}\r\n        renderExtraFooter={() => (\r\n          <>\r\n            {playlistForRemove && (\r\n              <Zoom in={!!playlistForRemove}>\r\n                <MuiAlert\r\n                  classes={{ message: classes.message }}\r\n                  severity=\"warning\"\r\n                  elevation={6}\r\n                  variant=\"filled\"\r\n                >\r\n                  <Typography className={classes.warningMsg}>\r\n                    {`\"${playlistForRemove.label}\" ${t('will be removed!')}`}\r\n                  </Typography>\r\n                  <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button\r\n                      size=\"small\"\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={handleRemove}\r\n                    >\r\n                      {t('Yes')}\r\n                    </Button>\r\n                    <Button\r\n                      size=\"small\"\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      className={classes.marginLeft}\r\n                      onClick={() => setPlaylistForRemove(null)}\r\n                    >\r\n                      {t('No')}\r\n                    </Button>\r\n                  </Box>\r\n                </MuiAlert>\r\n              </Zoom>\r\n            )}\r\n            <Divider variant=\"middle\" />\r\n            <Button variant=\"outlined\" className={classes.addBtn} onClick={handleAddPlaylist}>{t('New Playlist')}</Button>\r\n          </>\r\n        )}\r\n      />\r\n    ), [playlists, ws, selectedPlaylist, classes, selectedMP, playlistForRename, playlistForRemove, newPlaylistName, newPlaylistName, t]);\r\n};\r\nexport default MPPlaylists;\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport { SelectPicker } from 'rsuite';\r\nimport { useMPStore } from 'store/ProviderStore';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport setLocationParams from 'lib/utils/setLocationParams';\r\nimport ACTION_TYPES from 'constants/ACTION_TYPES';\r\n\r\nconst SelectMP = () => {\r\n    const { t } = useTranslation();\r\n    const [{ mediaPlayers, selectedMP }, dispatchMPStore] = useMPStore();\r\n    const history = useHistory();\r\n    const { page } = queryString.parse(window.location.search);\r\n\r\n    const handleChange = (selectedMPLabel) => {\r\n        if (selectedMP.label === selectedMPLabel) return;\r\n\r\n        dispatchMPStore({ type: ACTION_TYPES.SET_SELECTED_MP, payload: selectedMPLabel });\r\n        setLocationParams({\r\n            page, history, params: { MP: selectedMPLabel },\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const { MP } = queryString.parse(window.location.search);\r\n        if (!mediaPlayers.length || MP === selectedMP.label || page !== 'media-player') return;\r\n        if (!MP) {\r\n            setLocationParams({\r\n                page, history, params: { MP: mediaPlayers[0]?.label },\r\n            });\r\n        } else dispatchMPStore({ type: ACTION_TYPES.SET_SELECTED_MP, payload: selectedMP });\r\n    }, [mediaPlayers]);\r\n    return useMemo(() => (\r\n      <SelectPicker\r\n        size=\"md\"\r\n        placeholder={t('Select Media Player')}\r\n        data={mediaPlayers}\r\n        cleanable={false}\r\n        value={selectedMP?.value}\r\n        style={{ width: '100%', marginBottom: 8 }}\r\n        onChange={handleChange}\r\n      />\r\n    ), [mediaPlayers, t, selectedMP]);\r\n};\r\n\r\nexport default SelectMP;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport ViewModuleRoundedIcon from '@material-ui/icons/ViewModuleRounded';\r\nimport TuneRoundedIcon from '@material-ui/icons/TuneRounded';\r\nimport {\r\n Box, SwipeableDrawer, Grid, Slider, IconButton,\r\n Typography, Popover, useMediaQuery,\r\n} from '@material-ui/core';\r\nimport { useMPStore } from 'store/ProviderStore';\r\nimport ItemSettings from 'components/ItemSettings';\r\nimport MPPlaylists from 'components/MPPlaylists';\r\nimport SelectMP from 'components/SelectMP';\r\nimport ACTION_TYPES from 'constants/ACTION_TYPES';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    typography: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    icon: {\r\n        height: 35,\r\n        width: 35,\r\n    },\r\n    iconBtn: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingBottom: 0,\r\n            paddingTop: 0,\r\n        },\r\n    },\r\n    SwipeableDrawer: {\r\n        width: '80%',\r\n    },\r\n}));\r\nconst iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n\r\nconst marks = [\r\n    { value: 1, label: 1 },\r\n    { value: 2, label: 2 },\r\n    { value: 3, label: 3 },\r\n    { value: 4, label: 4 },\r\n    { value: 5, label: 5 },\r\n    { value: 6, label: 6 },\r\n];\r\n\r\nconst SwitchersForMP = ({ style }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [{ MPGridColumns, openMPSideBar, openMobileMPSideBar }, dispatchMPStore] = useMPStore();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [columns, setColumns] = useState(MPGridColumns);\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const handleTuneClick = (e) => setAnchorEl(e.currentTarget);\r\n    const handleClosePopover = () => setAnchorEl(null);\r\n    const openPopover = Boolean(anchorEl);\r\n    const id = openPopover ? 'simple-popover' : undefined;\r\n    const handleSettingsClick = () => dispatchMPStore({ type: ACTION_TYPES.SET_OPEN_MP_SIDE_BAR, payload: { openMPSideBar: !openMPSideBar } });\r\n    const handleChangeColumnsCommitted = (e, newValue) => dispatchMPStore({ type: ACTION_TYPES.SET_MP_GRID_COLUMNS, payload: newValue });\r\n    const handleChangeColumns = (e, newValue) => setColumns(newValue);\r\n    const toggleItemsSettings = (open) => (e) => {\r\n        if (e && e.type === 'keydown' && (e.key === 'Tab' || e.key === 'Shift')) return;\r\n        dispatchMPStore({ type: ACTION_TYPES.SET_OPEN_MP_SIDE_BAR, payload: { openMobileMPSideBar: open } });\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Grid style={{ width: 'auto', ...style }} justify=\"flex-end\" container wrap=\"nowrap\" spacing={1}>\r\n          {!isMobile && (\r\n          <Grid className={classes.AspectRatio} item>\r\n            <IconButton aria-describedby={id} onClick={handleTuneClick}>\r\n              <ViewModuleRoundedIcon className={classes.icon} />\r\n            </IconButton>\r\n          </Grid>\r\n          )}\r\n          <Grid item>\r\n            <IconButton className={classes.iconBtn} onClick={isMobile ? toggleItemsSettings(true) : handleSettingsClick}>\r\n              <TuneRoundedIcon className={classes.icon} />\r\n            </IconButton>\r\n            {isMobile && (\r\n            <SwipeableDrawer\r\n              anchor=\"right\"\r\n              onClose={toggleItemsSettings(false)}\r\n              onOpen={toggleItemsSettings(true)}\r\n              open={openMobileMPSideBar}\r\n              classes={{ paper: classes.SwipeableDrawer }}\r\n              ModalProps={{ disableEnforceFocus: true }}\r\n              disableBackdropTransition={!iOS}\r\n              disableDiscovery={iOS}\r\n            >\r\n              <Box mt={1} mx={1}>\r\n                <SelectMP />\r\n                <MPPlaylists />\r\n              </Box>\r\n              <ItemSettings />\r\n            </SwipeableDrawer>\r\n          )}\r\n          </Grid>\r\n        </Grid>\r\n        <Popover\r\n          id={id}\r\n          open={openPopover}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClosePopover}\r\n          anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            width=\"20vw\"\r\n            mx={2}\r\n            my={1}\r\n          >\r\n            <Typography className={classes.typography}>Columns</Typography>\r\n            <Slider\r\n              onChange={handleChangeColumns}\r\n              onChangeCommitted={handleChangeColumnsCommitted}\r\n              value={columns}\r\n              min={1}\r\n              marks={marks}\r\n              max={6}\r\n              step={1}\r\n            />\r\n          </Box>\r\n        </Popover>\r\n      </>\r\n    );\r\n};\r\nexport default SwitchersForMP;\r\n","export default {\r\n    GET_ROOT_GROOP: 120,\r\n    SET_ITEMS_PARAMS: 210,\r\n    ROOT_GROOP_RECEIVED: 1100,\r\n    UPDATE_PLAYLISTS_RECEIVED: 1110,\r\n    STATUS_RECEIVED: 1000,\r\n    MEDIA_ITEM_REMOVED: 1120,\r\n    GROUP_ITEM_RENAMED: 1130,\r\n    GROUP_ITEM_REMOVE: 150,\r\n    GROUP_ITEM_ADD: 140,\r\n    GROUP_ITEM_RENAME: 160,\r\n    GROUP_ITEM_MOVED: 1140,\r\n    UPDATE_MEDIA_ITEMS_RECEIVED: 1160,\r\n    PLAYLIST_RENAMED: 1130,\r\n    PRAMS_DIFF_RECEIVED: 1260,\r\n    ATTRIBUTES_RECEIVED: 1200,\r\n    INSERT_MANY_ITEMS: 220,\r\n    REMOVE_MANY_ITEMS: 230,\r\n    SET_VOLUME: 90,\r\n    PLAY_ITEM: 70,\r\n    PLAY: 10,\r\n    PAUSE: 20,\r\n    PLAY_PREVIOUS: 50,\r\n    PLAY_NEXT: 60,\r\n    STOP: 30,\r\n    SEEK: 40,\r\n    REORDER_PLAYLIST: 200,\r\n};\r\n","import i18n from 'i18next';\r\nimport detector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport translationEn from 'locales/en/translation.json';\r\nimport translationCh from 'locales/ch/translation.json';\r\n\r\ni18n\r\n    .use(detector)\r\n    .use(initReactI18next)\r\n    .init({\r\n        lng: localStorage.getItem('SBWebLanguage') || 'en',\r\n        resources: {\r\n            en: {\r\n                translation: translationEn,\r\n            },\r\n            ch: {\r\n                translation: translationCh,\r\n            },\r\n        },\r\n        keySeparator: false,\r\n\r\n        interpolation: {\r\n            escapeValue: false,\r\n        },\r\n    });\r\n\r\nexport default i18n;\r\n","import renameItem from './renameItem';\r\n\r\nconst parseMediaItem = (item, playlistId, index) => {\r\n    const penultimateIndex = item.length - 2;\r\n    return ({\r\n       path: item[0],\r\n       mediaFilename: renameItem(item[0]),\r\n       label: item[1],\r\n       volume: item[3],\r\n       muted: !!item[4],\r\n       id: item[2],\r\n       loops: item[penultimateIndex][0],\r\n       infinityLoop: !!item[penultimateIndex][1],\r\n       pauseOnStart: !!item[penultimateIndex][2],\r\n       pauseOnEnd: !!item[penultimateIndex][3],\r\n       tagColor: item[5],\r\n       comment: item[6],\r\n       fadeIn: +(item[penultimateIndex][6] / 1000000).toFixed(1),\r\n       sourceType: item[8],\r\n       playlistId,\r\n       index,\r\n    });\r\n};\r\n\r\nexport default parseMediaItem;\r\n","export default {\r\n    RECEIVED_ML_LISTS: 520,\r\n    UPLOADING_FINISHED: 2030,\r\n};\r\n","export default {\r\n  GET_WIZARDS_LIST: 101,\r\n  UPDATE_WIZARDS_LIST: 102,\r\n  GET_WIZARDS_XML: 201,\r\n  CLIENT_VALUE_CHANGE: 202,\r\n  REGISTER_PARAMETERS: 203,\r\n  SERVER_VALUE_CHANGED: 204,\r\n  GET_COMBO_LIST: 205,\r\n  UPDATE_IMAGE_PREVIEW: 206,\r\n  UPDATE_DEFAULT_VIEW: 301,\r\n  UPDATE_VIEW_SETTINGS: 302,\r\n};\r\n","export default {\r\n    REGISTER_RESPONDER: 200,\r\n    RESPONDER_REGISTERED: 300,\r\n    RESPONDER_MESSAGE: 320,\r\n    SEND_TO_RESPONDER: 230,\r\n};\r\n","export default {\r\n    GET_NODES: 1000,\r\n    NODES: 1200,\r\n    NODE_RENAMED: 1231,\r\n    LOGS_RECEIVED: 1300,\r\n};\r\n","import parseMediaItem from 'lib/utils/parseMediaItem';\r\nimport MP_CMD from 'constants/MP_CMD';\r\nimport ML_CMD from 'constants/ML_CMD';\r\nimport WIDGETS_CMD from 'constants/WIDGETS_CMD';\r\nimport SB_PROTOCOL_CMD from 'constants/SB_PROTOCOL_CMD';\r\nimport NODES_CMD from 'constants/NODES_CMD';\r\nimport queryString from 'query-string';\r\nimport AdvanceWS from 'reconnecting-websocket';\r\nimport ACTION_TYPES from 'constants/ACTION_TYPES';\r\nimport debounce from 'lib/utils/debounce';\r\n\r\nconst getWSBroadcast = ({\r\n        ip, port, selectedMP, dispatchMPStore, dispatchMLStore,\r\n        dispatchMPStatusStore, dispatchMainStore, dispatchWidgetsStore,\r\n    }) => {\r\n    let MPToRegister = null;\r\n    const debouncedVolumeUpdate = debounce((json) => dispatchMPStore({ type: ACTION_TYPES.UPDATE_MP_VOLUME, payload: json }), 1000);\r\n\r\n    if (!ip || !port) return;\r\n\r\n    const ws = new AdvanceWS(`ws://${ip}:${port}`);\r\n\r\n    ws.onerror = (e) => {\r\n        console.log('WS onerror event', e);\r\n        dispatchMainStore({ type: ACTION_TYPES.IS_DISCONNECTED });\r\n    };\r\n\r\n    ws.onclose = (e) => {\r\n        dispatchMainStore({ type: ACTION_TYPES.IS_DISCONNECTED });\r\n        console.log(`Socket is closed. Code: ${e.code}, reason: ${e.reason}.`);\r\n    };\r\n\r\n    ws.onopen = () => {\r\n        console.log(`WS connected to ${ip}:${port}`);\r\n        dispatchWidgetsStore({ type: ACTION_TYPES.CLEAN_REGISTERED_PARAMS });\r\n        dispatchMainStore({ type: ACTION_TYPES.IS_CONNECTED });\r\n        dispatchMainStore({ type: ACTION_TYPES.SET_IP_PORT, payload: { ip, port } });\r\n        dispatchMPStore({ type: ACTION_TYPES.SET_WS, payload: ws });\r\n        dispatchWidgetsStore({ type: ACTION_TYPES.SET_WS, payload: ws });\r\n        const registerRoot = JSON.stringify([SB_PROTOCOL_CMD.REGISTER_RESPONDER, 'Root']);\r\n        ws.send(registerRoot);\r\n        const getNodes = JSON.stringify([`Root/${NODES_CMD.GET_NODES}`]);\r\n        ws.send(getNodes);\r\n        ws.send(JSON.stringify({ id: WIDGETS_CMD.GET_WIZARDS_LIST }));\r\n    };\r\n    ws.onmessage = (evt) => {\r\n        const json = JSON.parse(evt.data);\r\n        const { page } = queryString.parse(window.location.search);\r\n\r\n        if (json.id) {\r\n            switch (json.id) {\r\n                case WIDGETS_CMD.GET_WIZARDS_XML: {\r\n                    dispatchWidgetsStore({ type: ACTION_TYPES.SET_WIDGETS_XML, payload: json.xml });\r\n                    break;\r\n                }\r\n                case WIDGETS_CMD.GET_WIZARDS_LIST: {\r\n                    dispatchWidgetsStore({ type: ACTION_TYPES.SET_WIDGETS_LIST, payload: json });\r\n                    break;\r\n                }\r\n                case WIDGETS_CMD.UPDATE_WIZARDS_LIST: {\r\n                    ws.send(JSON.stringify({ id: WIDGETS_CMD.GET_WIZARDS_LIST }));\r\n                    break;\r\n                }\r\n                case WIDGETS_CMD.UPDATE_IMAGE_PREVIEW: {\r\n                    dispatchWidgetsStore({ type: ACTION_TYPES.UPDATE_REACT_WIDGET_TREE });\r\n                    break;\r\n                }\r\n                case WIDGETS_CMD.GET_COMBO_LIST: {\r\n                    dispatchWidgetsStore({ type: ACTION_TYPES.SET_COMBO_LIST, payload: json.parameters });\r\n                    break;\r\n                }\r\n                case WIDGETS_CMD.SERVER_VALUE_CHANGED: {\r\n                    if (page === 'widgets') dispatchWidgetsStore({ type: ACTION_TYPES.SERVER_VALUE_CHANGED, payload: json.parameters });\r\n                    break;\r\n                }\r\n                default:\r\n                    break;\r\n            }\r\n        } else {\r\n            const listenerCmd = json.shift();\r\n            const resp = json.shift();\r\n            const cmd = json.shift();\r\n            switch (listenerCmd) {\r\n                case SB_PROTOCOL_CMD.RESPONDER_REGISTERED: {\r\n                    console.log(`Responder registered: ${json.shift()}`);\r\n                    break;\r\n                }\r\n                case SB_PROTOCOL_CMD.RESPONDER_MESSAGE: {\r\n                    if (resp === 'Root') {\r\n                        switch (cmd) {\r\n                            case NODES_CMD.NODES: {\r\n                                dispatchWidgetsStore({ type: ACTION_TYPES.NODES_PARAMS, payload: json });\r\n                                const count = json.shift();\r\n                                console.log(`Received ${count} nodes:`);\r\n                                const nodes = [];\r\n                                const mediaPlayers = [];\r\n\r\n                                for (let i = 0; i < count; i++) {\r\n                                    const type = json.shift();\r\n                                    const label = json.shift();\r\n                                    const node = {\r\n                                        type,\r\n                                        label,\r\n                                        value: label,\r\n                                    };\r\n                                    const parametersCount = json.shift();\r\n                                    if (node.type === 'MediaPlayer') {\r\n                                        node.volume = json.find((item) => item.includes('Volume'))[4][1];\r\n                                    }\r\n                                    for (let j = 0; j < parametersCount; j++) {\r\n                                        json.shift();\r\n                                    }\r\n                                    nodes.push(node);\r\n                                }\r\n                                // Nodes of MediaPlayer\r\n                                nodes.forEach((node) => {\r\n                                    if (node.type === 'MediaPlayer') mediaPlayers.push(node);\r\n                                });\r\n\r\n                                const foundMP = mediaPlayers.find((node) => node.label === queryString.parse(window.location.search).MP);\r\n                                MPToRegister = selectedMP || foundMP || mediaPlayers[0];\r\n                                if (MPToRegister) {\r\n                                    const registerMediaPlayer = JSON.stringify([SB_PROTOCOL_CMD.REGISTER_RESPONDER, MPToRegister.label]);\r\n                                    ws.send(registerMediaPlayer);\r\n                                    const getGroupItem = JSON.stringify([`${MPToRegister.label}/${MP_CMD.GET_ROOT_GROOP}`]);\r\n                                    ws.send(getGroupItem);\r\n                                    dispatchMPStore({\r\n                                        type: ACTION_TYPES.SET_MEDIA_PLAYERS,\r\n                                        payload: {\r\n                                            mediaPlayers,\r\n                                            selectedMP: MPToRegister,\r\n                                        },\r\n                                    });\r\n                                }\r\n                                const registerContentManager = JSON.stringify([SB_PROTOCOL_CMD.REGISTER_RESPONDER, 'ContentManager']);\r\n                                ws.send(registerContentManager);\r\n                                ws.send(JSON.stringify(['$ContentManager/2']));\r\n                                break;\r\n                            }\r\n                            case NODES_CMD.LOGS_RECEIVED: {\r\n                                dispatchMainStore({ type: ACTION_TYPES.SHOW_LOG_MSG, payload: json });\r\n                                break;\r\n                            }\r\n                            case NODES_CMD.NODE_RENAMED: {\r\n                                dispatchMPStore({\r\n                                    type: ACTION_TYPES.RENAME_MEDIA_PLAYERS,\r\n                                    payload: json,\r\n                                });\r\n                                break;\r\n                            }\r\n                            case MP_CMD.PRAMS_DIFF_RECEIVED: {\r\n                              if (json[0] === 1 && json[2] === 'Volume') {\r\n                                  debouncedVolumeUpdate(json);\r\n                              } else dispatchWidgetsStore({ type: ACTION_TYPES.PRAMS_DIFF, payload: json });\r\n                              break;\r\n                            }\r\n                            default:\r\n                                break;\r\n                        }\r\n                    }\r\n                    // MediaPlayer\r\n                    else if (resp === `Root/${MPToRegister.label}`) {\r\n                        switch (cmd) {\r\n                            case MP_CMD.ROOT_GROOP_RECEIVED: {\r\n                                function parseGroup(json) {\r\n                                    const id = json.shift();\r\n                                    const type = json.shift();\r\n                                    const label = json.shift();\r\n                                    const group = {\r\n                                        id,\r\n                                        type,\r\n                                        label,\r\n                                        value: id + label,\r\n                                        playlist: null,\r\n                                        children: [],\r\n                                    };\r\n                                    switch (group.type) {\r\n                                        // group\r\n                                        case 0: {\r\n                                            const count = json.shift();\r\n                                            for (let i = 0; i < count; i++) {\r\n                                              const child = parseGroup(json.shift());\r\n                                              if (!child.playlist?.type) group.children.push(child);\r\n                                            }\r\n                                            break;\r\n                                        }\r\n                                        // playlist\r\n                                        case 1: {\r\n                                            group.playlist = {\r\n                                                items: [],\r\n                                                type: null,\r\n                                            };\r\n                                            const playlistJson = json.shift();\r\n                                            const itemsCount = playlistJson.shift();\r\n                                            for (let i = 0; i < itemsCount; i++) {\r\n                                                group.playlist.items.push(parseMediaItem(playlistJson.shift(), group.id, i));\r\n                                            }\r\n                                            group.playlist.type = playlistJson.shift();\r\n                                            group.children = null;\r\n                                            break;\r\n                                        }\r\n                                        default:\r\n                                            break;\r\n                                    }\r\n                                    // SET INIT STORE\r\n                                    if (group.label === 'RootGroup') {\r\n                                        dispatchMPStore({\r\n                                            type: ACTION_TYPES.FIRST_SET_PLAYLISTS,\r\n                                            payload: group.children,\r\n                                        });\r\n                                    }\r\n                                    return group;\r\n                                }\r\n\r\n                                parseGroup(json[0]);\r\n                                break;\r\n                            }\r\n                            case MP_CMD.PLAYLIST_RENAMED: {\r\n                                dispatchMPStore({ type: ACTION_TYPES.RENAME_PLAYLIST, payload: json });\r\n                                break;\r\n                            }\r\n                            case MP_CMD.STATUS_RECEIVED: {\r\n                                if (page !== 'media-player') break;\r\n                                dispatchMPStore({\r\n                                    type: ACTION_TYPES.SET_STATUS,\r\n                                    payload: {\r\n                                        currentPlayingPlaylistId: json[1],\r\n                                        currentPlayingItemId: json[8],\r\n                                        statusTransportControl: json[0],\r\n                                    },\r\n                                });\r\n                                dispatchMPStatusStore({\r\n                                    type: ACTION_TYPES.SET_STATUS,\r\n                                    payload: {\r\n                                        currentPlayingProgress: json[3],\r\n                                    },\r\n                                });\r\n                                break;\r\n                            }\r\n                            case MP_CMD.MEDIA_ITEM_REMOVED: {\r\n                                dispatchMPStore({ type: ACTION_TYPES.DELETE_PLAYLIST, payload: json[0] });\r\n                                break;\r\n                            }\r\n                            case MP_CMD.UPDATE_MEDIA_ITEMS_RECEIVED: {\r\n                                const items = json[1].slice(1, json[1][0] + 1);\r\n                                const formattedItems = items.map((item, i) => ({\r\n                                    ...parseMediaItem(item, json[0], i),\r\n                                }));\r\n                                dispatchMPStore({\r\n                                    type: ACTION_TYPES.UPDATE_MEDIA_ITEMS,\r\n                                    payload: {\r\n                                        playlistId: json[0],\r\n                                        items: formattedItems,\r\n                                    },\r\n                                });\r\n                                break;\r\n                            }\r\n                            case MP_CMD.UPDATE_PLAYLISTS_RECEIVED: {\r\n                                dispatchMPStore({\r\n                                    type: ACTION_TYPES.UPDATE_PLAYLISTS,\r\n                                    payload: {\r\n                                        goupId: json[0],\r\n                                        id: json[2][0],\r\n                                        type: json[2][1],\r\n                                        label: json[2][2],\r\n                                        value: json[2][0] + json[2][2],\r\n                                        playlist: {},\r\n                                    },\r\n                                });\r\n                                break;\r\n                            }\r\n                            default:\r\n                                break;\r\n                        }\r\n                    }\r\n                    // Content Manager\r\n                    else if (resp.includes('ContentManager')) {\r\n                        switch (cmd) {\r\n                            case ML_CMD.RECEIVED_ML_LISTS: {\r\n                                dispatchMLStore({ type: ACTION_TYPES.SET_ML_LISTS, payload: json });\r\n                                dispatchMPStore({ type: ACTION_TYPES.SET_ITEMS_TIME, payload: json });\r\n                                break;\r\n                            }\r\n                            case ML_CMD.UPLOADING_FINISHED: {\r\n                                ws.send(JSON.stringify(['$ContentManager/2']));\r\n                                break;\r\n                            }\r\n                            default:\r\n                                break;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                default: {\r\n                    console.log(`Unknown listener command ${listenerCmd}:`);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport default getWSBroadcast;\r\n","import { useEffect } from 'react';\r\nimport getWSBroadcast from 'lib/api/getWSBroadcast';\r\nimport queryString from 'query-string';\r\nimport {\r\n useMainStore, useMPStore, useMPStatusStore, useMLStore, useWidgetsStore,\r\n} from 'store/ProviderStore';\r\nimport usePrevious from 'hooks/usePrevious';\r\nimport ACTION_TYPES from 'constants/ACTION_TYPES';\r\n\r\nconst useWSBroadcast = () => {\r\n    const [{ ws, selectedMP }, dispatchMPStore] = useMPStore();\r\n    const [, dispatchMainStore] = useMainStore();\r\n    const [, dispatchMPStatusStore] = useMPStatusStore();\r\n    const [, dispatchMLStore] = useMLStore();\r\n    const [, dispatchWidgetsStore] = useWidgetsStore();\r\n    const { serverIp, serverPort } = queryString.parse(window.location.search);\r\n    const prevSelectedMP = usePrevious(selectedMP);\r\n\r\n    useEffect(() => {\r\n        if (selectedMP && !prevSelectedMP) return;\r\n        if (ws) {\r\n            ws.close();\r\n            dispatchMPStore({ type: ACTION_TYPES.CLOSE_WS_CONNECT });\r\n            dispatchWidgetsStore({ type: ACTION_TYPES.CLOSE_WS_CONNECT });\r\n        }\r\n        getWSBroadcast({\r\n            ip: serverIp || window.location.hostname,\r\n            port: serverPort || window.location.port,\r\n            selectedMP,\r\n            dispatchMPStore,\r\n            dispatchMPStatusStore,\r\n            dispatchMainStore,\r\n            dispatchMLStore,\r\n            dispatchWidgetsStore,\r\n        });\r\n    }, [selectedMP?.label]);\r\n};\r\nexport default useWSBroadcast;\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport default (value) => {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n};\r\n","import { useCallback } from 'react';\r\n\r\n const useDoubleClick = (doubleClick, click) => useCallback((event) => {\r\n        if (click && event.detail === 1) click(event);\r\n        if (event.detail % 2 === 0) doubleClick(event);\r\n }, [click, doubleClick]);\r\n export default useDoubleClick;\r\n","export const secondsToMinSec = (seconds) => {\r\n    const time = +seconds;\r\n    const h = Math.floor(time / 3600);\r\n    let m = Math.floor(time % 3600 / 60);\r\n    let s = Math.floor(time % 3600 % 60);\r\n    const hDisplay = h > 0 ? `${h}:` : '';\r\n    if (s > 0 && s < 10) s = `0${s}`;\r\n    else if (!s) s = '00';\r\n    else s = `${s}`;\r\n    if (m > 0 && m < 10) m = `0${m}:`;\r\n    else if (!m) m = '00:';\r\n    else m = `${m}:`;\r\n\r\n    return hDisplay + m + s;\r\n};\r\n","export const MP_ICONS_URL = `${process.env.PUBLIC_URL}/assets/icons`;\r\n","export default {\r\n    STATE_STOP: 0,\r\n    STATE_PLAY: 1,\r\n    STATE_PAUSE: 2,\r\n    SOURCE_UNKNOWN: -1,\r\n    SOURCE_MEDIA: 0,\r\n    SOURCE_LOOP_IN: 1,\r\n    SOURCE_LOOP_OUT: 2,\r\n    SOURCE_AUX: 3,\r\n};\r\n","const getPathToPreview = (ip, port, path) => `http://${ip}:${port}/serverImageFile?pathImg=${path}/preview.jpg`;\r\n\r\nexport default getPathToPreview;\r\n","import ENUMS_MP from 'constants/enums/MP';\r\nimport { MP_ICONS_URL } from 'constants/BASE_URLs';\r\nimport getPathToPreview from 'lib/utils/getPathToPreview';\r\n\r\nconst getCardImgPath = ({\r\n sourceType, ip, port, path,\r\n}) => {\r\n    if (sourceType === ENUMS_MP.SOURCE_MEDIA) return getPathToPreview(ip, port, path);\r\n    if (sourceType === ENUMS_MP.SOURCE_UNKNOWN) return `${MP_ICONS_URL}/corrupted.png`;\r\n    if (sourceType === ENUMS_MP.SOURCE_AUX) return `${MP_ICONS_URL}/aux_image.png`;\r\n    if (sourceType === ENUMS_MP.SOURCE_LOOP_IN) return `${MP_ICONS_URL}/loopStart.png`;\r\n    if (sourceType === ENUMS_MP.SOURCE_LOOP_OUT) return `${MP_ICONS_URL}/loopEnd.png`;\r\n};\r\nexport default getCardImgPath;\r\n","import React, { memo, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport {\r\n CardActionArea, CardContent, IconButton, CardMedia, DialogActions, Box, DialogContentText,\r\n    Typography, ListItem, Tooltip, Zoom, Fab, Button, Dialog, DialogContent,\r\n} from '@material-ui/core';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport useDoubleClick from 'hooks/useDoubleClick';\r\nimport { secondsToMinSec } from 'lib/utils/convertTime';\r\nimport { MP_ICONS_URL } from 'constants/BASE_URLs';\r\nimport { areEqual } from 'react-window';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ENUMS_MP from 'constants/enums/MP';\r\nimport getCardImgPath from 'lib/utils/getCardImgPath';\r\nimport { SortableElement } from 'react-sortable-hoc';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    itemBtn: (props) => ({\r\n        paddingLeft: theme.spacing(1),\r\n        paddingRight: theme.spacing(1),\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: props.ITEM_WIDTH - 4,\r\n    }),\r\n    itemName: {\r\n        fontSize: '12px !important',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        display: 'webkit-box',\r\n        webKitLineClamp: 3,\r\n        webKitBoxOrient: 'vertical',\r\n        lineHeight: '20px !important',\r\n        whiteSpace: 'nowrap',\r\n        width: '100%',\r\n        textAlign: 'center',\r\n    },\r\n    selected: {\r\n        backgroundColor: `${theme.palette.secondary.main} !important`,\r\n    },\r\n    CardContent: {\r\n        padding: theme.spacing(0.5),\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    },\r\n    item: (props) => ({\r\n        listStyleType: 'none',\r\n        padding: 0,\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid',\r\n        position: 'relative',\r\n        borderColor: props.isSelected ? theme.palette.primary.main : 'transparent',\r\n        height: 'max-content',\r\n    }),\r\n    itemIcon: {\r\n        width: 15,\r\n        height: 15,\r\n    },\r\n    previewImg: ({ ITEM_WIDTH, ITEM_HEIGHT }) => ({\r\n        width: ITEM_WIDTH - 18,\r\n        height: ITEM_HEIGHT - 48,\r\n        objectFit: 'fill',\r\n    }),\r\n\r\n    itemIconContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        height: 20,\r\n        paddingLeft: theme.spacing(1),\r\n        paddingRight: theme.spacing(1),\r\n        paddingTop: theme.spacing(0.3),\r\n        paddingBottom: theme.spacing(0.3),\r\n        position: 'absolute',\r\n        zIndex: 10,\r\n        backgroundColor: theme.palette.primary.darkTransparentBtn,\r\n    },\r\n    addBtn: {\r\n        position: 'absolute',\r\n        zIndex: 1000,\r\n        bottom: -2,\r\n        right: -2,\r\n        width: 25,\r\n        height: 25,\r\n        minHeight: 0,\r\n        backgroundColor: theme.palette.primary.darkTransparentBtn,\r\n        boxShadow: 'none',\r\n    },\r\n    addIcon: {\r\n        fontSize: '17px',\r\n        color: '#fff',\r\n    },\r\n    removeBtn: {\r\n        zIndex: 100,\r\n        position: 'absolute',\r\n        top: -2,\r\n        left: -2,\r\n        color: '#d90c0c',\r\n        padding: 0,\r\n    },\r\n    removeIcon: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    statusIconContainer: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        padding: theme.spacing(0.13),\r\n    },\r\n    iconWrapper: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    loopsContainer: {\r\n        position: 'absolute',\r\n        right: 'calc(50% - 7)px',\r\n        bottom: 0,\r\n    },\r\n    timeAmount: {\r\n        position: 'absolute !important',\r\n        right: '5px !important',\r\n        bottom: '25px !important',\r\n        backgroundColor: '#000 !important',\r\n        padding: '0 2px !important',\r\n    },\r\n\r\n}));\r\n\r\nconst MPMediaItem = SortableElement(memo(({\r\n data, item, key, style,\r\n}) => {\r\n    const {\r\n         ip, handleClickEditBtn, port, editMode, ITEM_HEIGHT, ITEM_WIDTH, MPGridColumns, selectedItem,\r\n        currentPlayingItemId, isCurrentPlayingPlaylist, handleClickItem, handleDoubleClick,\r\n         handleRemoveItem, statusTransportControl,\r\n    } = data;\r\n    const {\r\n       id, path, index, timeAmount, label, sourceType,\r\n       mediaFilename, isImage, pauseOnStart, pauseOnEnd,\r\n       loops, fadeIn, infinityLoop, hasAudio,\r\n    } = item;\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const { t } = useTranslation();\r\n    const itemName = label || mediaFilename;\r\n    const isCurrentPlayingItem = currentPlayingItemId === id && isCurrentPlayingPlaylist;\r\n    const classes = useStyles({\r\n        isSelected: selectedItem?.id === id, ITEM_WIDTH, MPGridColumns, ITEM_HEIGHT,\r\n    });\r\n\r\n    const isValid = sourceType === ENUMS_MP.SOURCE_AUX || sourceType === ENUMS_MP.SOURCE_MEDIA;\r\n\r\n    const hybridClick = useDoubleClick(handleDoubleClick, () => handleClickItem(item, isValid));\r\n    const addDefaultSrc = (e) => e.target.src = `${MP_ICONS_URL}/noPreview.png`;\r\n    const handleCloseRemoveDialog = () => setOpenDialog(false);\r\n\r\n    return (\r\n      <div\r\n        onClick={hybridClick}\r\n        className={classes.item}\r\n        key={key}\r\n        style={style}\r\n      >\r\n        {editMode && (\r\n        <IconButton\r\n          className={classes.removeBtn}\r\n          onClick={() => setOpenDialog(true)}\r\n        >\r\n          <ClearIcon className={classes.removeIcon} />\r\n        </IconButton>\r\n            )}\r\n        <ListItem\r\n          classes={{ selected: classes.selected }}\r\n          className={classes.itemBtn}\r\n          selected={isCurrentPlayingItem}\r\n        >\r\n          <Card>\r\n            <CardActionArea>\r\n              <Box position=\"relative\">\r\n                {isValid && (\r\n                  <Box lineHeight={0} className={classes.itemIconContainer} top={0}>\r\n                    <Box flexBasis=\"33%\">\r\n                      {isImage ? <img className={classes.itemIcon} src={`${MP_ICONS_URL}/image.png`} alt=\"imageIcon\" />\r\n                                : <img className={classes.itemIcon} src={`${MP_ICONS_URL}/video.png`} alt=\"video\" /> }\r\n                    </Box>\r\n                    <Box flexBasis=\"33%\" display=\"flex\" justifyContent=\"center\">\r\n                      {isCurrentPlayingItem && statusTransportControl === ENUMS_MP.STATE_STOP\r\n                            && <Zoom in className={classes.statusIconContainer}><img src={`${MP_ICONS_URL}/stop.png`} alt=\"stop\" /></Zoom>}\r\n                      {isCurrentPlayingItem && statusTransportControl === ENUMS_MP.STATE_PLAY\r\n                            && <Zoom in className={classes.statusIconContainer}><img src={`${MP_ICONS_URL}/play.png`} alt=\"play\" /></Zoom>}\r\n                      {isCurrentPlayingItem && statusTransportControl === ENUMS_MP.STATE_PAUSE\r\n                            && <Zoom in className={classes.statusIconContainer}><img src={`${MP_ICONS_URL}/pause.png`} alt=\"pause\" /></Zoom>}\r\n                    </Box>\r\n                    <Box flexBasis=\"34%\" display=\"flex\" justifyContent=\"flex-end\">\r\n                      {hasAudio && <img className={classes.itemIcon} src={`${MP_ICONS_URL}/audio.png`} alt=\"audio\" />}\r\n                    </Box>\r\n                  </Box>\r\n                  )}\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  alt={itemName}\r\n                  onError={addDefaultSrc}\r\n                  className={classes.previewImg}\r\n                  image={getCardImgPath({\r\n                    sourceType, ip, port, path,\r\n                  })}\r\n                />\r\n                {isValid && (\r\n                  <Box className={classes.itemIconContainer} right={0} bottom={0}>\r\n                    <Box flexBasis=\"33%\">\r\n                      <Zoom in={!!fadeIn}>\r\n                        <Box className={classes.iconWrapper}>\r\n                          <img className={classes.itemIcon} src={`${MP_ICONS_URL}/fadeIn.png`} alt=\"fadeIn\" />\r\n                          <Box ml={0.5}>\r\n                            {fadeIn}\r\n                            s\r\n                          </Box>\r\n                        </Box>\r\n                      </Zoom>\r\n                    </Box>\r\n                    <Box flexBasis=\"33%\" display=\"flex\" justifyContent=\"center\">\r\n                      <Zoom in={loops > 1 || infinityLoop}>\r\n                        <Box className={classes.iconWrapper}>\r\n                          <img className={classes.itemIcon} src={`${MP_ICONS_URL}/loop.png`} alt=\"loop\" />\r\n                          <Box ml={0.5}>{!infinityLoop && loops > 1 && loops}</Box>\r\n                        </Box>\r\n                      </Zoom>\r\n                    </Box>\r\n                    <Box flexBasis=\"34%\" display=\"flex\" justifyContent=\"flex-end\">\r\n                      {pauseOnStart && !pauseOnEnd && <Zoom in><img className={classes.itemIcon} src={`${MP_ICONS_URL}/pauseOnStart.png`} alt=\"pauseOnStart\" /></Zoom>}\r\n                      {pauseOnEnd && !pauseOnStart && <Zoom in><img className={classes.itemIcon} src={`${MP_ICONS_URL}/pauseOnEnd.png`} alt=\"pauseOnEnd\" /></Zoom>}\r\n                      {pauseOnEnd && pauseOnStart && <Zoom in><img className={classes.itemIcon} src={`${MP_ICONS_URL}/pauseOnStartEnd.png`} alt=\"pauseOnStartEnd\" /></Zoom>}\r\n                    </Box>\r\n                    <Box className={classes.timeAmount}>\r\n                      {secondsToMinSec(timeAmount)}\r\n                    </Box>\r\n                  </Box>\r\n                    )}\r\n              </Box>\r\n              <CardContent className={classes.CardContent}>\r\n                <Tooltip TransitionComponent={Zoom} title={itemName || ''}>\r\n                  <Typography\r\n                    className={classes.itemName}\r\n                    color=\"textSecondary\"\r\n                    component=\"h6\"\r\n                  >\r\n                    {itemName}\r\n                  </Typography>\r\n                </Tooltip>\r\n              </CardContent>\r\n            </CardActionArea>\r\n          </Card>\r\n        </ListItem>\r\n        {editMode && (\r\n        <Fab\r\n          variant=\"round\"\r\n          className={classes.addBtn}\r\n          color=\"primary\"\r\n          onClick={handleClickEditBtn}\r\n        >\r\n          <AddRoundedIcon className={classes.addIcon} />\r\n        </Fab>\r\n          )}\r\n        <Dialog\r\n          open={openDialog}\r\n          onClose={handleCloseRemoveDialog}\r\n        >\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              {isCurrentPlayingItem ? t('Playback will be stopped') : `\"${itemName}\" ${t('will be removed!')}`}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => {\r\n                 handleRemoveItem(index);\r\n                 setOpenDialog(false);\r\n              }}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              autoFocus\r\n              size=\"small\"\r\n            >\r\n              {t('Yes')}\r\n            </Button>\r\n            <Button\r\n              onClick={handleCloseRemoveDialog}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              {t('No')}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n  );\r\n}, areEqual));\r\n\r\nexport default MPMediaItem;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useMLStore } from 'store/ProviderStore';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { TreePicker } from 'rsuite';\r\nimport ACTION_TYPES from 'constants/ACTION_TYPES';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    TreePicker: {\r\n        width: '65vw',\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst MLFolders = () => {\r\n    const classes = useStyles();\r\n    const [{ MLFoldersTree, selectedFolder }, dispatchMLStore] = useMLStore();\r\n    const { t } = useTranslation();\r\n    const handleSelect = (selectedNode) => dispatchMLStore({ type: ACTION_TYPES.SET_SELECTED_ML_LIST, payload: selectedNode });\r\n\r\n    return (\r\n      <TreePicker\r\n        value={selectedFolder?.value}\r\n        data={MLFoldersTree}\r\n        defaultExpandAll\r\n        onSelect={handleSelect}\r\n        className={classes.TreePicker}\r\n        placeholder={t('Select Folder')}\r\n      />\r\n    );\r\n};\r\n\r\nexport default MLFolders;\r\n","import React, { memo } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n Card, CardActionArea, Typography, CardContent, CardMedia, ListItem, Tooltip,\r\n} from '@material-ui/core';\r\nimport { MP_ICONS_URL } from 'constants/BASE_URLs';\r\nimport { areEqual } from 'react-window';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    file: (props) => ({\r\n        listStyleType: 'none',\r\n        height: 'max-content',\r\n        padding: theme.spacing(1),\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: props.FILE_WIDTH,\r\n    }),\r\n    fileName: {\r\n        fontSize: '12px',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        display: 'webkit-box',\r\n        webKitLineClamp: 3,\r\n        webKitBoxOrient: 'vertical',\r\n        lineHeight: '20px',\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    selected: {\r\n        backgroundColor: `${theme.palette.primary.main} !important`,\r\n    },\r\n    previewImg: ({ FILE_HEIGHT, FILE_WIDTH }) => ({\r\n        backgroundImage: `url(${MP_ICONS_URL}/noPreview.png)`,\r\n        width: FILE_WIDTH - 16,\r\n        height: FILE_HEIGHT - 44,\r\n    }),\r\n    CardContent: {\r\n        padding: theme.spacing(0.5),\r\n    },\r\n}));\r\n\r\nconst MLFile = memo(({\r\n columnIndex, rowIndex, style, data,\r\n}) => {\r\n    const {\r\n        mediaFiles, ip, port, isMobile, FILE_WIDTH, FILE_HEIGHT, selectedFiles, handleClick,\r\n    } = data;\r\n    const classes = useStyles({ FILE_WIDTH, FILE_HEIGHT });\r\n\r\n    const fileIndex = isMobile ? rowIndex : columnIndex + (rowIndex * 4);\r\n    const file = mediaFiles[fileIndex] || {};\r\n    const { path, id, fileName } = file;\r\n\r\n    const addDefaultSrc = (e) => {\r\n        e.target.src = `${MP_ICONS_URL}/noPreview.png`;\r\n    };\r\n\r\n    return (\r\n      <>\r\n        {file && fileIndex < mediaFiles.length && (\r\n          <ListItem\r\n            classes={{ selected: classes.selected }}\r\n            button\r\n            style={style}\r\n            key={id}\r\n            className={classes.file}\r\n            onClick={() => handleClick(file)}\r\n            selected={selectedFiles.some((item) => item.id === id)}\r\n          >\r\n            <Card>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  className={classes.previewImg}\r\n                  onError={addDefaultSrc}\r\n                  image={`http://${ip}:${port}/serverImageFile?pathImg=${path}/preview.jpg`}\r\n                />\r\n                <CardContent className={classes.CardContent}>\r\n                  <Tooltip title={fileName}>\r\n                    <Typography className={classes.fileName} variant=\"p\" color=\"textSecondary\" component=\"p\">\r\n                      {fileName}\r\n                    </Typography>\r\n                  </Tooltip>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </Card>\r\n          </ListItem>\r\n        )}\r\n      </>\r\n    );\r\n}, areEqual);\r\nexport default MLFile;\r\n","import React from 'react';\r\nimport { useMLStore, useMainStore } from 'store/ProviderStore';\r\nimport { FixedSizeGrid } from 'react-window';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport MLFile from 'components/MLFile';\r\nimport { useMediaQuery } from '@material-ui/core';\r\nimport ACTION_TYPES from 'constants/ACTION_TYPES';\r\nimport { useScrollbarSize } from 'react-scrollbar-size';\r\n\r\nconst getRowsAmount = (rowWidth, itemWidth, itemsAmount, hasMore) => {\r\n    const maxItemsPerRow = Math.max(Math.floor(rowWidth / itemWidth), 1);\r\n    return Math.ceil(itemsAmount / maxItemsPerRow) + (hasMore ? 1 : 0);\r\n};\r\nconst FILE_HEIGHT = 192;\r\n\r\nconst MLFileList = () => {\r\n    const [{ ip, port }] = useMainStore();\r\n    const [{ selectedFolder: { mediaFiles = null }, selectedFiles }, dispatchMLStore] = useMLStore();\r\n    const isMobile = useMediaQuery('(max-width:600px)');\r\n    const { width: scrollbarWidth } = useScrollbarSize();\r\n\r\n    const handleClick = (file) => {\r\n         const currentIndex = selectedFiles.findIndex((item) => item.id === file.id);\r\n       const newSelected = [...selectedFiles];\r\n       if (currentIndex === -1) newSelected.push(file);\r\n       else newSelected.splice(currentIndex, 1);\r\n       dispatchMLStore({ type: ACTION_TYPES.SET_SELECTED_FILES, payload: newSelected });\r\n    };\r\n    return (\r\n      <>\r\n        {mediaFiles && (\r\n        <AutoSizer>\r\n          {({ height, width }) => {\r\n           const FILE_WIDTH = isMobile ? width : (width - scrollbarWidth) / 4;\r\n           const rowCount = getRowsAmount(width, FILE_WIDTH, mediaFiles.length);\r\n           const itemData = {\r\n             mediaFiles,\r\n            ip,\r\n            port,\r\n            isMobile,\r\n            FILE_WIDTH,\r\n            FILE_HEIGHT,\r\n            selectedFiles,\r\n            handleClick,\r\n           };\r\n\r\n           return (\r\n             <FixedSizeGrid\r\n               columnCount={isMobile ? 1 : 4}\r\n               columnWidth={isMobile ? width : width / 4}\r\n               rowCount={rowCount}\r\n               rowHeight={FILE_HEIGHT}\r\n               overscanRowCount={3}\r\n               height={height}\r\n               width={width}\r\n               itemData={itemData}\r\n             >\r\n               {MLFile}\r\n             </FixedSizeGrid>\r\n           );\r\n          }}\r\n        </AutoSizer>\r\n       )}\r\n      </>\r\n    );\r\n};\r\nexport default MLFileList;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n Modal, Backdrop, Fade, AppBar, Fab, Toolbar, Paper,\r\n} from '@material-ui/core';\r\nimport MLFolders from 'components/MLFolders';\r\nimport { useMLStore, useMPStore } from 'store/ProviderStore';\r\nimport MLFileList from 'components/MLFileList';\r\nimport SB_PROTOCOL_CMD from 'constants/SB_PROTOCOL_CMD';\r\nimport MP_CMD from 'constants/MP_CMD';\r\nimport ACTION_TYPES from 'constants/ACTION_TYPES';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    rootPaper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        height: '85vh',\r\n        width: '85vw',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: `2px solid ${theme.palette.primary.main}`,\r\n        boxShadow: theme.shadows[5],\r\n        outline: 'none',\r\n        padding: theme.spacing(1),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '90vw',\r\n        },\r\n    },\r\n    mediaFileListPaper: {\r\n        width: '100%',\r\n        height: '80vh',\r\n    },\r\n    appBar: {\r\n        top: 'auto',\r\n        bottom: 0,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    fabButton: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        top: -30,\r\n        left: 0,\r\n        right: 0,\r\n        margin: '0 auto',\r\n    },\r\n}));\r\n\r\nconst MLModalWindow = ({ setOpenModal }) => {\r\n    const classes = useStyles();\r\n    const [{\r\n        ws, selectedMP, selectedItem, selectedPlaylist,\r\n    }] = useMPStore();\r\n    const [{ selectedFiles }, dispatchMLStore] = useMLStore();\r\n\r\n    const handleCloseModal = () => {\r\n        setOpenModal(false);\r\n        dispatchMLStore({ type: ACTION_TYPES.SET_SELECTED_FILES, payload: [] });\r\n    };\r\n\r\n    const handleAddClick = () => {\r\n        if (ws) {\r\n            setOpenModal(false);\r\n            const mediaFiles = selectedFiles.map((item) => [item.path, '', 0, 1.001, 0, 1, '', [0], 0, '', 0, 0, 0, 0, 0, 0, 0, -1, 0, [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]);\r\n            ws.send(JSON.stringify([SB_PROTOCOL_CMD.SEND_TO_RESPONDER, `Root/${selectedMP.label}`, MP_CMD.INSERT_MANY_ITEMS,\r\n                selectedPlaylist.id, selectedItem ? selectedItem.index + 1 : 10000, mediaFiles.length, ...mediaFiles]));\r\n            dispatchMLStore({ type: ACTION_TYPES.SET_SELECTED_FILES, payload: [] });\r\n        }\r\n    };\r\n\r\n    return (\r\n      <Modal\r\n        className={classes.modal}\r\n        open\r\n        onClose={handleCloseModal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <Fade in>\r\n          <>\r\n            <div className={classes.rootPaper}>\r\n              <MLFolders />\r\n              <Paper elevation={3} className={classes.mediaFileListPaper}>\r\n                <MLFileList />\r\n              </Paper>\r\n            </div>\r\n            <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n              <Toolbar>\r\n                <Fab onClick={handleAddClick} color=\"secondary\" aria-label=\"add\" className={classes.fabButton}>\r\n                  Add\r\n                </Fab>\r\n                <div className={classes.grow} />\r\n              </Toolbar>\r\n            </AppBar>\r\n          </>\r\n        </Fade>\r\n      </Modal>\r\n    );\r\n};\r\n\r\nexport default MLModalWindow;\r\n","import React, {\r\n useState, useEffect, useMemo,\r\n} from 'react';\r\nimport 'react-virtualized/styles.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useMediaQuery, Fab, Box } from '@material-ui/core';\r\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\r\nimport { useMPStore, useMainStore } from 'store/ProviderStore';\r\nimport findDeep from 'deepdash-es/findDeep';\r\nimport MPMediaItem from 'components/MPMediaItem';\r\nimport MLModalWindow from 'components/MLModalWindow';\r\nimport { useScrollbarSize } from 'react-scrollbar-size';\r\nimport MP_CMD from 'constants/MP_CMD';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Grid, AutoSizer } from 'react-virtualized';\r\nimport ACTION_TYPES from 'constants/ACTION_TYPES';\r\nimport { SortableContainer } from 'react-sortable-hoc';\r\nimport arrayMove from 'array-move';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        flex: 1,\r\n        '& *': {\r\n            outline: 'none',\r\n        },\r\n    },\r\n    grid: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    editBtn: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        right: 20,\r\n        [theme.breakpoints.up('md')]: {\r\n            bottom: 20,\r\n            right: 30,\r\n        },\r\n    },\r\n    lastAddBtn: {\r\n        margin: theme.spacing(2),\r\n        backgroundColor: theme.palette.primary.darkTransparentBtn,\r\n        color: '#fff',\r\n    },\r\n}));\r\nconst getRowsAmount = (rowWidth, itemWidth, itemsAmount, hasMore) => {\r\n    const maxItemsPerRow = Math.max(Math.floor(rowWidth / itemWidth), 1);\r\n    return Math.ceil(itemsAmount / maxItemsPerRow) + (hasMore ? 1 : 0);\r\n};\r\n\r\nconst VirtualizedGridWrapper = (props) => (\r\n  <Grid\r\n    {...props}\r\n    cellRenderer={({\r\n        columnIndex, key, rowIndex, style,\r\n    }) => {\r\n       const { data: { isMobile, MPGridColumns }, items } = props;\r\n       const itemIndex = isMobile ? rowIndex : columnIndex + (rowIndex * MPGridColumns);\r\n       if (itemIndex >= items.length) return null;\r\n\r\n       const item = items[itemIndex] || {};\r\n        return (\r\n          <MPMediaItem\r\n            item={item}\r\n            index={itemIndex}\r\n            data={props.data}\r\n            style={style}\r\n            key={key}\r\n          />\r\n       );\r\n    }}\r\n  />\r\n);\r\nconst SortableVirtualizedGrid = SortableContainer(VirtualizedGridWrapper);\r\n\r\nconst GridWrapper = (props) => {\r\n    const {\r\n        component: Component, data: { items }, useDragHandle, reorderPlaylist,\r\n    } = props;\r\n    const [newItems, setNewItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setNewItems(items);\r\n    }, [items]);\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        if (oldIndex === newIndex) return;\r\n\r\n        const reordered = arrayMove(items, oldIndex, newIndex);\r\n        reorderPlaylist(reordered.map((item) => item.index));\r\n        setNewItems(reordered);\r\n    };\r\n\r\n    const propsObj = {\r\n        items: newItems,\r\n        onSortEnd,\r\n        useDragHandle,\r\n    };\r\n    return <Component {...props} {...propsObj} />;\r\n};\r\n\r\nconst MPMediaItemList = () => {\r\n    const [{\r\n        ws, playlists, statusTransportControl, isCurrentPlayingPlaylist, selectedMP,\r\n        MPGridColumns, currentPlayingItemId, selectedItem, selectedPlaylist,\r\n    }, dispatchMPStore] = useMPStore();\r\n    const classes = useStyles({ MPGridColumns });\r\n    const [{ ip, port }] = useMainStore();\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [editMode, setEditMode] = useState(null);\r\n\r\n    const isMobile = useMediaQuery('(max-width:600px)');\r\n    const { t } = useTranslation();\r\n    const { width: scrollbarWidth } = useScrollbarSize();\r\n\r\n    const handleDoubleClick = () => dispatchMPStore({ type: ACTION_TYPES.SET_OPEN_MP_SIDE_BAR, payload: { openMobileMPSideBar: true, openMPSideBar: true } });\r\n    const handleClickEditBtn = (item) => {\r\n        setOpenModal(true);\r\n        dispatchMPStore({ type: ACTION_TYPES.SET_SELECTED_ITEM, payload: item });\r\n    };\r\n    const handleClickItem = (item, isValid) => {\r\n        if (isValid) dispatchMPStore({ type: ACTION_TYPES.SET_SELECTED_ITEM, payload: item });\r\n    };\r\n    const handleRemoveItem = (itemIndex) => {\r\n        if (ws) {\r\n            ws.send(JSON.stringify([`${selectedMP.label}/${MP_CMD.REMOVE_MANY_ITEMS}`, selectedPlaylist.id, 1, itemIndex]));\r\n        }\r\n    };\r\n    const reorderPlaylist = (reorderMap) => {\r\n        if (ws) {\r\n            ws.send(JSON.stringify([`${selectedMP.label}/${MP_CMD.REORDER_PLAYLIST}`, selectedPlaylist.id, ...reorderMap]));\r\n        }\r\n    };\r\n    const items = useMemo(() => {\r\n        if (selectedPlaylist?.type) {\r\n            return findDeep(playlists, (val, key, parent) => {\r\n                if (key === 'id' && val === selectedPlaylist.id && parent.type === 1) return true;\r\n            })?.parent.playlist?.items;\r\n        }\r\n    }, [playlists, selectedPlaylist?.id]);\r\n\r\n    return (\r\n      <div className={classes.container}>\r\n        { selectedPlaylist?.type && !items?.length ? (\r\n          <Box m={2}>\r\n            <Fab\r\n              variant=\"round\"\r\n              size=\"large\"\r\n              className={classes.lastAddBtn}\r\n              color=\"primary\"\r\n              onClick={() => setOpenModal(true)}\r\n            >\r\n              <AddRoundedIcon />\r\n            </Fab>\r\n          </Box>\r\n        ) : null}\r\n        {items && ws && (\r\n        <AutoSizer>\r\n          {({ height, width }) => {\r\n              const ITEM_WIDTH = isMobile ? width : (width - scrollbarWidth) / MPGridColumns;\r\n              const ITEM_HEIGHT = isMobile ? 230 : ITEM_WIDTH;\r\n              const rowCount = getRowsAmount(width, ITEM_WIDTH, items.length);\r\n              const propsData = {\r\n                 items,\r\n                 handleClickItem,\r\n                 handleClickEditBtn,\r\n                 handleDoubleClick,\r\n                 currentPlayingItemId,\r\n                 selectedItem,\r\n                 ip,\r\n                 port,\r\n                 editMode,\r\n                 isCurrentPlayingPlaylist,\r\n                 isMobile,\r\n                 MPGridColumns,\r\n                 ITEM_WIDTH,\r\n                 ITEM_HEIGHT,\r\n                 handleRemoveItem,\r\n                 statusTransportControl,\r\n              };\r\n            return (\r\n              <>\r\n                <GridWrapper\r\n                  axis=\"xy\"\r\n                  component={SortableVirtualizedGrid}\r\n                  data={propsData}\r\n                  rowCount={rowCount}\r\n                  height={height}\r\n                  width={width}\r\n                  columnCount={isMobile ? 1 : MPGridColumns}\r\n                  className={classes.grid}\r\n                  columnWidth={ITEM_WIDTH}\r\n                  rowHeight={ITEM_HEIGHT}\r\n                  distance={1}\r\n                  useDragHandle={!editMode}\r\n                  reorderPlaylist={reorderPlaylist}\r\n                  overscanRowCount={3}\r\n                />\r\n                <Fab\r\n                  className={classes.editBtn}\r\n                  onClick={() => setEditMode((prev) => !prev)}\r\n                  color=\"primary\"\r\n                  variant=\"round\"\r\n                >\r\n                  {t('Edit')}\r\n                </Fab>\r\n              </>\r\n            );\r\n          }}\r\n        </AutoSizer>\r\n        )}\r\n        {openModal && <MLModalWindow setOpenModal={setOpenModal} />}\r\n      </div>\r\n    );\r\n};\r\nexport default MPMediaItemList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Slider } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useMPStatusStore, useMPStore } from 'store/ProviderStore';\r\nimport { secondsToMinSec } from 'lib/utils/convertTime';\r\nimport MP_CMD from 'constants/MP_CMD';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    Slider: {\r\n        display: 'block',\r\n        margin: '0 auto',\r\n        width: '90%',\r\n        paddingBottom: theme.spacing(1),\r\n    },\r\n    timer: {\r\n        textAlign: 'center',\r\n        lineHeight: 1,\r\n    },\r\n}));\r\n\r\nconst TimeSlider = () => {\r\n    const classes = useStyles();\r\n    const [{ currentPlayingProgress }] = useMPStatusStore();\r\n    const [{\r\n        ws, selectedMP, selectedPlaylist, currentPlayingItem: { timeAmount, fps } = { timeAmount: 0, fps: 0 },\r\n    }] = useMPStore();\r\n    const [isDragging, setIsDragging] = useState(null);\r\n    const [value, setValue] = useState(0);\r\n    const currentPlayingSec = +(timeAmount * currentPlayingProgress).toFixed(10);\r\n\r\n    useEffect(() => {\r\n        if (!isDragging) setValue(currentPlayingSec);\r\n    }, [currentPlayingSec]);\r\n\r\n    const handleChangeCommitted = (event, newValue) => {\r\n        if (ws) {\r\n            ws.send(JSON.stringify([`${selectedMP.label}/${MP_CMD.SEEK}`, +(newValue * fps).toFixed()]));\r\n            setTimeout(() => setIsDragging(false), 100);\r\n        }\r\n    };\r\n    const handleChange = (event, newValue) => {\r\n        setIsDragging(true);\r\n        setValue(+newValue);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Slider\r\n          className={classes.Slider}\r\n          disabled={!selectedPlaylist}\r\n          value={value}\r\n          min={0}\r\n          max={timeAmount}\r\n          getAriaLabelText={secondsToMinSec}\r\n          valueLabelFormat={secondsToMinSec}\r\n          onChange={handleChange}\r\n          onChangeCommitted={handleChangeCommitted}\r\n          valueLabelDisplay=\"auto\"\r\n        />\r\n        <p className={classes.timer}>{ws && selectedPlaylist ? `${secondsToMinSec(timeAmount)}/${secondsToMinSec(currentPlayingSec)}` : '00:00/00:00'}</p>\r\n      </>\r\n    );\r\n};\r\nexport default TimeSlider;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n Slider, IconButton, Popover, Box,\r\n} from '@material-ui/core';\r\nimport VolumeUp from '@material-ui/icons/VolumeUp';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MP_CMD from 'constants/MP_CMD';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        height: 35,\r\n        width: 35,\r\n    },\r\n    iconBtn: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            padding: 0,\r\n        },\r\n    },\r\n    Popover: {\r\n        overflow: 'hidden',\r\n    },\r\n}));\r\n\r\nconst Volume = ({\r\n selectedMP, ws, selectedPlaylist,\r\n}) => {\r\n    const classes = useStyles();\r\n    const [volumeValue, setVolumeValue] = useState(100);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const openPopover = Boolean(anchorEl);\r\n    const id = openPopover ? 'simple-popover' : undefined;\r\n\r\n    const handleClosePopover = () => setAnchorEl(null);\r\n    const handleVolumeChange = (e, newValue) => {\r\n        setVolumeValue(newValue);\r\n        if (ws) ws.send(JSON.stringify([`${selectedMP.label}/${MP_CMD.SET_VOLUME}`, newValue / 100 + 0.001]));\r\n    };\r\n\r\n    const handleVolumeClick = (e) => setAnchorEl(e.currentTarget);\r\n\r\n    useEffect(() => {\r\n        setVolumeValue(selectedMP?.volume * 100);\r\n    }, [selectedMP]);\r\n\r\n    return (\r\n      <div className={classes.volumeContainer}>\r\n        <IconButton disabled={!selectedPlaylist} id={id} className={classes.iconBtn} style={{ width: 'fit-content' }} onClick={handleVolumeClick}>\r\n          <VolumeUp className={classes.icon} />\r\n        </IconButton>\r\n        <Popover\r\n          id={id}\r\n          open={openPopover}\r\n          anchorEl={anchorEl}\r\n          classes={{ root: classes.Popover }}\r\n          onClose={handleClosePopover}\r\n          anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'center',\r\n          }}\r\n        >\r\n          <Box py={2.5} px={1} overflow=\"hidden\" height=\"17vh\">\r\n            <Slider\r\n              orientation=\"vertical\"\r\n              disabled={!selectedPlaylist}\r\n              value={volumeValue}\r\n              onChange={handleVolumeChange}\r\n            />\r\n          </Box>\r\n        </Popover>\r\n      </div>\r\n    );\r\n};\r\nexport default Volume;\r\n","import React from 'react';\r\nimport MP_CMD from 'constants/MP_CMD';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { IconButton, Grid } from '@material-ui/core';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SlideshowIcon from '@material-ui/icons/Slideshow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport SwitchersForMP from 'components/SwitchersForMP';\r\nimport Volume from 'components/Volume';\r\nimport { useMPStore } from 'store/ProviderStore';\r\nimport ENUMS_MP from 'constants/enums/MP';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mediaFilesListContainer: {\r\n        flex: 1,\r\n        '& *': {\r\n            outline: 'none',\r\n        },\r\n    },\r\n    content: {\r\n        flex: '1 0 auto',\r\n        textAlign: 'center',\r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    icon: {\r\n        height: 35,\r\n        width: 35,\r\n    },\r\n    iconBtn: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            padding: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nconst TransportControls = () => {\r\n    const classes = useStyles();\r\n    const [{\r\n        ws, selectedMP, selectedPlaylist, selectedItem, statusTransportControl,\r\n    }] = useMPStore();\r\n    const theme = useTheme();\r\n\r\n    const handlePlaySelected = () => {\r\n        if (ws && selectedItem && selectedPlaylist) {\r\n            ws.send(JSON.stringify([`${selectedMP.label}/${MP_CMD.PLAY_ITEM}`, selectedPlaylist.id, selectedItem.index]));\r\n        }\r\n    };\r\n    const handlePlay = () => {\r\n        if (ws) ws.send(JSON.stringify([`${selectedMP.label}/${MP_CMD.PLAY}`]));\r\n    };\r\n    const handlePause = () => {\r\n        if (ws) ws.send(JSON.stringify([`${selectedMP.label}/${MP_CMD.PAUSE}`]));\r\n    };\r\n    const handlePrev = () => {\r\n        if (ws) ws.send(JSON.stringify([`${selectedMP.label}/${MP_CMD.PLAY_PREVIOUS}`]));\r\n    };\r\n    const handleNext = () => {\r\n        if (ws) ws.send(JSON.stringify([`${selectedMP.label}/${MP_CMD.PLAY_NEXT}`]));\r\n    };\r\n    const handleStop = () => {\r\n        if (ws) ws.send(JSON.stringify([`${selectedMP.label}/${MP_CMD.STOP}`]));\r\n    };\r\n    return (\r\n      <Grid container spacing={1} justify=\"space-between\" alignItems=\"center\">\r\n        <Grid item xs={11} sm={8}>\r\n          <Grid container justify=\"space-around\" alignItems=\"center\" spacing={3}>\r\n            <Grid item xs={1}>\r\n              <IconButton disabled={!selectedPlaylist} className={classes.iconBtn} onClick={handlePlaySelected}>\r\n                <SlideshowIcon className={classes.icon} />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <IconButton\r\n                disabled={!selectedPlaylist}\r\n                color={statusTransportControl === ENUMS_MP.STATE_PLAY ? 'primary' : 'default'}\r\n                className={classes.iconBtn}\r\n                onClick={handlePlay}\r\n              >\r\n                <PlayArrowIcon className={classes.icon} />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <IconButton\r\n                disabled={!selectedPlaylist}\r\n                color={statusTransportControl === ENUMS_MP.STATE_PAUSE ? 'primary' : 'default'}\r\n                className={classes.iconBtn}\r\n                onClick={handlePause}\r\n              >\r\n                <PauseIcon className={classes.icon} />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <IconButton\r\n                disabled={!selectedPlaylist}\r\n                color={statusTransportControl === ENUMS_MP.STATE_STOP ? 'primary' : 'default'}\r\n                className={classes.iconBtn}\r\n                onClick={handleStop}\r\n              >\r\n                <StopIcon className={classes.icon} />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <IconButton\r\n                disabled={!selectedPlaylist}\r\n                className={classes.iconBtn}\r\n                onClick={handlePrev}\r\n              >\r\n                {theme.direction === 'rtl' ? <SkipNextIcon className={classes.icon} /> : <SkipPreviousIcon className={classes.icon} />}\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <IconButton\r\n                disabled={!selectedPlaylist}\r\n                className={classes.iconBtn}\r\n                onClick={handleNext}\r\n              >\r\n                {theme.direction === 'rtl' ? <SkipPreviousIcon className={classes.icon} /> : <SkipNextIcon className={classes.icon} />}\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid className={classes.iconBtn} item xs={3}>\r\n              <Volume\r\n                ws={ws}\r\n                selectedMP={selectedMP}\r\n                selectedPlaylist={selectedPlaylist}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={1} sm={2}>\r\n          <SwitchersForMP />\r\n        </Grid>\r\n      </Grid>\r\n);\r\n};\r\nexport default TransportControls;\r\n","import React, { memo } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper } from '@material-ui/core';\r\nimport MPMediaItemList from 'components/MPMediaItemList';\r\nimport TimeSlider from 'components/TimeSlider';\r\nimport TransportControls from 'components/TransportControls';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        paddingBottom: theme.spacing(1),\r\n        height: '100%',\r\n        [theme.breakpoints.up('lg')]: {\r\n            height: 'calc(100vh - 80px)',\r\n        },\r\n    },\r\n}));\r\n\r\nconst Player = memo(() => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <MPMediaItemList />\r\n        <TimeSlider />\r\n        <TransportControls />\r\n      </Paper>\r\n    );\r\n});\r\nexport default Player;\r\n","import React from 'react';\r\nimport { Box, Slide } from '@material-ui/core';\r\nimport SelectMP from 'components/SelectMP';\r\nimport MPPlaylists from 'components/MPPlaylists';\r\nimport ItemSettings from 'components/ItemSettings';\r\n\r\nconst MPSideBar = ({ openMPSideBar }) => (\r\n  <Slide direction=\"left\" in={openMPSideBar}>\r\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <SelectMP />\r\n      <MPPlaylists />\r\n      <ItemSettings />\r\n    </Box>\r\n  </Slide>\r\n);\r\n\r\nexport default MPSideBar;\r\n","import React, { useMemo } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useMPStore } from 'store/ProviderStore';\r\nimport Player from 'components/Player';\r\nimport MPSideBar from 'components/MPSideBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    [theme.breakpoints.between('sm', 'md')]: {\r\n      padding: theme.spacing(1),\r\n    },\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n  },\r\n  MPSideBar: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  item: {\r\n    [theme.breakpoints.down('md')]: {\r\n      height: 'calc(100% - 40px)',\r\n    },\r\n  },\r\n}));\r\n\r\nconst MediaPlayer = () => {\r\n  const classes = useStyles();\r\n  const [{ openMPSideBar }] = useMPStore();\r\n\r\n  return useMemo(() => (\r\n    <Grid\r\n      justify=\"space-between\"\r\n      alignItems=\"stretch\"\r\n      container\r\n      spacing={1}\r\n      className={classes.container}\r\n    >\r\n      <Grid className={classes.item} item xs={12} md={openMPSideBar ? 9 : 12}>\r\n        <Player />\r\n      </Grid>\r\n      <Grid className={`${classes.MPSideBar} ${classes.item}`} item md={3}>\r\n        <MPSideBar openMPSideBar={openMPSideBar} />\r\n      </Grid>\r\n    </Grid>\r\n  ), [openMPSideBar, classes]);\r\n};\r\nexport default MediaPlayer;\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport WIDGETS_CMD from 'constants/WIDGETS_CMD';\r\nimport { useWidgetsStore } from 'store/ProviderStore';\r\nimport { SelectPicker } from 'rsuite';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport setLocationParams from 'lib/utils/setLocationParams';\r\nimport ACTION_TYPES from 'constants/ACTION_TYPES';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    SelectPicker: {\r\n        width: '70%',\r\n        marginBottom: theme.spacing(1),\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '40%',\r\n        },\r\n    },\r\n}));\r\n\r\nconst WidgetList = () => {\r\n  const classes = useStyles();\r\n  const [{\r\n      widgetsList, ws, selectedWidget, widgetsURL,\r\n}, dispatchWidgetsStore] = useWidgetsStore();\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  const { page } = queryString.parse(window.location.search);\r\n\r\n    useEffect(() => {\r\n      if (ws && widgetsList.length) {\r\n        const index = widgetsList.findIndex((item) => item.value === selectedWidget);\r\n        ws.send(JSON.stringify({ id: WIDGETS_CMD.GET_WIZARDS_XML, wizardURL: [widgetsURL[index]] }));\r\n      }\r\n    }, [ws, widgetsList, selectedWidget]);\r\n\r\n  useEffect(() => {\r\n      if (page === 'widgets' && selectedWidget) {\r\n          setLocationParams({\r\n            page, history, params: { widget: selectedWidget },\r\n          });\r\n          return;\r\n      }\r\n      const { widget } = queryString.parse(window.location.search);\r\n      if (!widgetsList.length || selectedWidget === widget || page !== 'widgets') return;\r\n\r\n      const hasWidget = widgetsList.find((item) => item.value === widget);\r\n      if (!widget || !hasWidget) {\r\n          dispatchWidgetsStore({ type: ACTION_TYPES.SET_SELECTED_WIDGET, payload: widgetsList[0].value });\r\n          setLocationParams({\r\n                page, history, params: { widget: widgetsList[0]?.value },\r\n          });\r\n      } else dispatchWidgetsStore({ type: ACTION_TYPES.SET_SELECTED_WIDGET, payload: widget });\r\n  }, [widgetsList, page, selectedWidget]);\r\n\r\n  const handleChange = (newValue) => {\r\n      dispatchWidgetsStore({ type: ACTION_TYPES.SET_SELECTED_WIDGET, payload: newValue });\r\n      setLocationParams({\r\n           page, history, params: { widget: newValue },\r\n      });\r\n  };\r\n\r\n    return (\r\n      <SelectPicker\r\n        size=\"lg\"\r\n        placeholder={t('No widgets')}\r\n        data={widgetsList}\r\n        value={selectedWidget}\r\n        cleanable={false}\r\n        className={classes.SelectPicker}\r\n        onChange={handleChange}\r\n      />\r\n  );\r\n};\r\nexport default WidgetList;\r\n","import isEqual from 'lodash/isEqual';\r\nimport WIDGETS_CMD from 'constants/WIDGETS_CMD';\r\nimport ACTION_TYPES from 'constants/ACTION_TYPES';\r\n\r\nexport default (elementParams, ws, registeredParameters, dispatchWidgetsStore) => {\r\n    const isRegistered = registeredParameters.some((obj) => isEqual(obj, elementParams));\r\n    if (!isRegistered) {\r\n        dispatchWidgetsStore({ type: ACTION_TYPES.SET_REGISTERED_PARAMS, payload: elementParams });\r\n        if (ws) {\r\n            ws.send(JSON.stringify({\r\n                id: WIDGETS_CMD.REGISTER_PARAMETERS,\r\n                parameters: [elementParams],\r\n            }));\r\n        }\r\n    }\r\n};\r\n","import findDeep from 'deepdash-es/findDeep';\r\n\r\nexport default (updatedElem, disabledElements, nodesParams, param) => {\r\n    if (updatedElem?.disabled !== undefined && disabledElements[2] === param) {\r\n        updatedElem.disabled = !disabledElements[3][0];\r\n    } else if (nodesParams && nodesParams && updatedElem && updatedElem.disabled === undefined) {\r\n        updatedElem.disabled = !findDeep(nodesParams, (val, key, parent) => {\r\n            if (parent?.includes(param)) {\r\n                return true;\r\n            }\r\n        })?.parent[4][0];\r\n    }\r\n};\r\n","const computedStageSize = (innerWidth) => {\r\n    if (innerWidth >= 600 && innerWidth < 960) return { stageWidth: innerWidth * 0.60, stageHeight: innerWidth * 0.60 * 0.66666666666 };\r\n    if (innerWidth >= 960 && innerWidth < 1280) return { stageWidth: innerWidth * 0.45, stageHeight: innerWidth * 0.45 * 0.66666666666 };\r\n    return { stageWidth: innerWidth * 0.43, stageHeight: innerWidth * 0.43 * 0.66666666666 };\r\n};\r\nexport default computedStageSize;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useWindowSize = () => {\r\n    const [windowSize, setWindowSize] = useState({\r\n        innerWidth: null,\r\n        innerHeight: null,\r\n    });\r\n    useEffect(() => {\r\n       const handleResize = () => {\r\n            setWindowSize({\r\n                innerWidth: window.innerWidth,\r\n                innerHeight: window.innerHeight,\r\n            });\r\n       };\r\n        window.addEventListener('resize', handleResize);\r\n        handleResize();\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n    return windowSize;\r\n};\r\nexport default useWindowSize;\r\n","import React, {\r\n useEffect, useState, useMemo, useRef,\r\n} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Paper, Typography, Button, TextField, FormControlLabel,\r\n    Select, InputLabel, FormControl, Grid, Slider, Checkbox, MenuItem,\r\n} from '@material-ui/core';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport XMLToReact from '@condenast/xml-to-react';\r\nimport { useWidgetsStore, useMainStore } from 'store/ProviderStore';\r\nimport isEqual from 'lodash/isEqual';\r\nimport WIDGETS_CMD from 'constants/WIDGETS_CMD';\r\nimport registerParams from 'lib/utils/registerParams';\r\nimport checkDisabled from 'lib/utils/checkDisabled';\r\nimport computedStageSize from 'lib/utils/computedStageSize';\r\nimport useWindowSize from 'hooks/useWindowSize';\r\nimport {\r\n Stage, Layer, Ellipse, Transformer, Rect,\r\n} from 'react-konva';\r\nimport ACTION_TYPES from 'constants/ACTION_TYPES';\r\nimport { MapInteractionCSS } from 'react-map-interaction';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   rootPaper: {\r\n    height: 'calc(100% - 100px)',\r\n    overflow: 'auto',\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.up('lg')]: {\r\n        marginBottom: theme.spacing(1),\r\n        marginRight: 0,\r\n        height: 'calc(100vh - 140px)',\r\n    },\r\n   },\r\n   spacer: {\r\n    height: theme.spacing(2),\r\n    width: theme.spacing(2),\r\n   },\r\n   HLayout: {\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n   },\r\n   VLayout: {\r\n    margin: theme.spacing(1),\r\n   },\r\n   paragraph: {\r\n    marginBottom: theme.spacing(1),\r\n    marginTop: theme.spacing(1),\r\n   },\r\n   header: {\r\n       fontSize: '25px',\r\n   },\r\n   ComboBox: {\r\n     width: '25vw',\r\n     marginRight: theme.spacing(2),\r\n   },\r\n   button: {\r\n    margin: theme.spacing(1),\r\n    whiteSpace: 'nowrap',\r\n    width: 'fit-content',\r\n    height: 'fit-content',\r\n   },\r\n   imgContainer: (props) => ({\r\n     position: 'relative',\r\n     height: props.stageHeight + 10,\r\n   }),\r\n   img: {\r\n     position: 'absolute',\r\n       zIndex: 1,\r\n     backgroundColor: theme.palette.background.default,\r\n   },\r\n   stage: {\r\n     position: 'absolute',\r\n     zIndex: 10,\r\n   },\r\n   HSliderFloat: {\r\n      minWidth: '200px',\r\n   },\r\n   GridLayout: {\r\n      display: 'grid',\r\n   },\r\n   VSliderFloat: {\r\n      height: '40vh',\r\n   },\r\n   grid: {\r\n    margin: 0,\r\n   },\r\n   VSliderFloatContainer: {\r\n      width: 'fit-content',\r\n   },\r\n}));\r\n\r\nconst EllipseShape = ({\r\n  shapeProps, isSelected, onChange, setDisabledPan,\r\n}) => {\r\n    const shapeRef = useRef();\r\n    const trRef = useRef();\r\n\r\n   useEffect(() => {\r\n        if (isSelected) {\r\n            trRef.current.nodes([shapeRef.current]);\r\n            trRef.current.getLayer().batchDraw();\r\n        }\r\n   }, [isSelected]);\r\n\r\n    return (\r\n      <>\r\n        <Ellipse\r\n          ref={shapeRef}\r\n          {...shapeProps}\r\n          strokeScaleEnabled={false}\r\n          strokeWidth={1}\r\n          strokeLinearGradientStartPoint={{ x: 0, y: 0 }}\r\n          strokeLinearGradientEndPoint={{ x: 200, y: 150 }}\r\n          strokeLinearGradientColorStops={[0, deepOrange[800]]}\r\n          draggable\r\n          onMouseEnter={() => setDisabledPan(true)}\r\n          onMouseLeave={() => setDisabledPan(false)}\r\n          onTouchStart={() => setDisabledPan(true)}\r\n          onTouchEnd={() => setDisabledPan(false)}\r\n          onDragEnd={(e) => {\r\n              setDisabledPan(false);\r\n              onChange({\r\n                  ...shapeProps,\r\n                  x: e.target.x(),\r\n                  y: e.target.y(),\r\n              });\r\n          }}\r\n          onTransformStart={() => setDisabledPan(true)}\r\n          onTransformEnd={() => {\r\n             setDisabledPan(false);\r\n             const node = shapeRef.current;\r\n             const scaleX = node.scaleX();\r\n             const scaleY = node.scaleY();\r\n             node.scaleX(1);\r\n             node.scaleY(1);\r\n             onChange({\r\n                 ...shapeProps,\r\n                 x: node.x(),\r\n                 y: node.y(),\r\n                 width: Math.max(5, node.width() * scaleX),\r\n                 height: Math.max(node.height() * scaleY),\r\n             });\r\n          }}\r\n        />\r\n        {isSelected && (\r\n        <Transformer\r\n          ref={trRef}\r\n          borderEnabled={false}\r\n          rotateEnabled={false}\r\n          anchorFill=\"transparent\"\r\n          enabledAnchors={['middle-left', 'top-center', 'middle-right', 'bottom-center']}\r\n          boundBoxFunc={(oldBox, newBox) => {\r\n            if (newBox.width < 5 || newBox.height < 5) return oldBox;\r\n            return newBox;\r\n          }}\r\n        />\r\n            )}\r\n      </>\r\n    );\r\n};\r\n\r\nconst RectShape = ({\r\n shapeProps, isSelected, onChange, setDisabledPan,\r\n}) => {\r\n    const shapeRef = useRef();\r\n    const trRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (isSelected) {\r\n            trRef.current.nodes([shapeRef.current]);\r\n            trRef.current.getLayer().batchDraw();\r\n        }\r\n    }, [isSelected]);\r\n\r\n    return (\r\n      <>\r\n        <Rect\r\n          ref={shapeRef}\r\n          {...shapeProps}\r\n          draggable\r\n          strokeScaleEnabled={false}\r\n          strokeWidth={1}\r\n          strokeLinearGradientStartPoint={{ x: 0, y: 0 }}\r\n          strokeLinearGradientEndPoint={{ x: 200, y: 150 }}\r\n          strokeLinearGradientColorStops={[0, deepOrange[800]]}\r\n          onMouseEnter={() => setDisabledPan(true)}\r\n          onMouseLeave={() => setDisabledPan(false)}\r\n          onTouchStart={() => setDisabledPan(true)}\r\n          onTouchEnd={() => setDisabledPan(false)}\r\n          onDragEnd={(e) => {\r\n             setDisabledPan(false);\r\n             onChange({\r\n                 ...shapeProps,\r\n                 x: e.target.x(),\r\n                 y: e.target.y(),\r\n             });\r\n          }}\r\n          onTransformStart={() => setDisabledPan(true)}\r\n          onTransformEnd={() => {\r\n             setDisabledPan(false);\r\n             const node = shapeRef.current;\r\n             const scaleX = node.scaleX();\r\n             const scaleY = node.scaleY();\r\n\r\n             node.scaleX(1);\r\n             node.scaleY(1);\r\n             onChange({\r\n                 ...shapeProps,\r\n                 x: node.x(),\r\n                 y: node.y(),\r\n                 width: Math.max(5, node.width() * scaleX),\r\n                 height: Math.max(node.height() * scaleY),\r\n             });\r\n          }}\r\n        />\r\n        {isSelected && (\r\n        <Transformer\r\n          ref={trRef}\r\n          borderEnabled={false}\r\n          rotateEnabled={false}\r\n          anchorFill=\"transparent\"\r\n          boundBoxFunc={(oldBox, newBox) => {\r\n             if (newBox.width < 5 || newBox.height < 5) return oldBox;\r\n             return newBox;\r\n          }}\r\n        />\r\n            )}\r\n      </>\r\n    );\r\n};\r\n\r\nconst Widget = () => {\r\n    const [{\r\n      widgetsXML, updatedParams, comboLists, nodesParams, comboBoxToFill,\r\n      updateReactWidgetTree, selectedWidget, ws, disabledElements,\r\n      registeredParameters,\r\n    }, dispatchWidgetsStore] = useWidgetsStore();\r\n    const [{ ip, port }] = useMainStore();\r\n    const [reactTree, setReactTree] = useState(null);\r\n    const [localParams, setLocalParams] = useState([]);\r\n    const [disabledPan, setDisabledPan] = useState(false);\r\n    const [changedCalibrationArea, setChangedCalibArea] = useState({});\r\n    const { innerWidth } = useWindowSize();\r\n    const { stageWidth, stageHeight } = useMemo(() => computedStageSize(innerWidth), [innerWidth]);\r\n    const classes = useStyles({ stageHeight });\r\n\r\n    const handleClickBtn = ({ node, param, value = '0' }) => {\r\n        ws.send(JSON.stringify({\r\n        id: WIDGETS_CMD.CLIENT_VALUE_CHANGE, node, param, value,\r\n      }));\r\n    };\r\n    const handleComboBoxChange = ({\r\n      node, param, e, options = [],\r\n    }) => {\r\n       const optionIndex = options.findIndex((option) => option === e.target.value);\r\n       if (ws) {\r\n           ws.send(JSON.stringify({\r\n              id: WIDGETS_CMD.CLIENT_VALUE_CHANGE, node, param, value: `${optionIndex}`,\r\n           }));\r\n       }\r\n    };\r\n    const handleSliderChange = (event, newValue, { param, node }) => {\r\n        setLocalParams((prevParams) => prevParams.map((obj) => {\r\n            if (node === obj.node && param === obj.param) obj.value = newValue;\r\n            return obj;\r\n        }));\r\n    };\r\n    const handleSliderChangeCommitted = (event, newValue, { param, node }) => {\r\n        setLocalParams((prevParams) => prevParams.map((obj) => {\r\n            if (node === obj.node && param === obj.param) obj.value = newValue;\r\n            return obj;\r\n        }));\r\n        ws.send(JSON.stringify({\r\n            id: WIDGETS_CMD.CLIENT_VALUE_CHANGE, node, param, value: `${newValue}`,\r\n        }));\r\n    };\r\n    const handleSliderInputChange = (event, { param, node }) => {\r\n        const targetVal = event.target.value;\r\n        setLocalParams((prevParams) => prevParams.map((obj) => {\r\n            if (param === obj.param && node === obj.node) obj.value = targetVal;\r\n            return obj;\r\n        }));\r\n    };\r\n    const handleBlur = (e, {\r\n      min, max, param, node,\r\n    }) => {\r\n      const sendValue = (value) => ws.send(JSON.stringify({\r\n          id: WIDGETS_CMD.CLIENT_VALUE_CHANGE, node, param, value,\r\n      }));\r\n        setLocalParams((prevParams) => prevParams.map((obj) => {\r\n         if (obj.param === param && node === obj.node) {\r\n             if (obj.value < min) obj.value = min;\r\n             else if (obj.value > max) obj.value = max;\r\n             sendValue(`${obj.value}`);\r\n         }\r\n         return obj;\r\n      }));\r\n    };\r\n    const handleCheckboxChange = (e, { param, node }) => {\r\n        const targetVal = e.target.checked;\r\n        ws.send(JSON.stringify({\r\n            id: WIDGETS_CMD.CLIENT_VALUE_CHANGE, node, param, value: `${targetVal}`,\r\n        }));\r\n    };\r\n    const handleEllipseChange = (newAttrs, node) => {\r\n        setChangedCalibArea(newAttrs);\r\n        const coordinates = {\r\n            x: Number(((newAttrs.x - (newAttrs.width / 2)) / stageWidth).toFixed(14)),\r\n            y: Number(((newAttrs.x + (newAttrs.width / 2)) / stageWidth).toFixed(14)),\r\n            z: Number(((stageHeight - newAttrs.y - (newAttrs.height / 2)) / stageHeight).toFixed(14)),\r\n            w: Number(((stageHeight - newAttrs.y + (newAttrs.height / 2)) / stageHeight).toFixed(14)),\r\n        };\r\n        ws.send(JSON.stringify({\r\n            id: WIDGETS_CMD.CLIENT_VALUE_CHANGE,\r\n            node,\r\n            param: '$screenAreaNormalized',\r\n            value: `${coordinates.x} ${coordinates.z} ${coordinates.y} ${coordinates.w}`,\r\n        }));\r\n    };\r\n    const handleRectChange = (newAttrs, node) => {\r\n        setChangedCalibArea(newAttrs);\r\n        const coordinates = {\r\n            x: Number((newAttrs.x / stageWidth).toFixed(14)),\r\n            y: Number(((newAttrs.x + newAttrs.width) / stageWidth).toFixed(14)),\r\n            z: Number(((stageHeight - newAttrs.y - newAttrs.height) / stageHeight).toFixed(14)),\r\n            w: Number(((stageHeight - newAttrs.y) / stageHeight).toFixed(14)),\r\n        };\r\n        ws.send(JSON.stringify({\r\n            id: WIDGETS_CMD.CLIENT_VALUE_CHANGE,\r\n            node,\r\n            param: '$screenAreaNormalized',\r\n            value: `${coordinates.x} ${coordinates.z} ${coordinates.y} ${coordinates.w}`,\r\n        }));\r\n    };\r\n\r\n    const xmlToReact = useMemo(() => new XMLToReact({\r\n              Wizard: () => ({ type: React.Fragment }),\r\n              VLayout: (attrs) => ({ type: 'div', props: { className: classes.VLayout, style: { gridColumnStart: Number(attrs.gridPositionX) + 1 || 1, gridRowStart: Number(attrs.gridPositionY) + 1 || 1 } } }),\r\n              GridLayout: () => ({ type: 'div', props: { className: classes.GridLayout } }),\r\n              Spacer: () => ({ type: 'br', props: { className: classes.spacer } }),\r\n              HLayout: (attrs) => ({ type: 'div', props: { ...attrs, className: classes.HLayout } }),\r\n              Button: (attrs) => {\r\n                  const elementParams = { node: attrs.node, param: attrs.param, type: 'Button' };\r\n                  registerParams(elementParams, ws, registeredParameters, dispatchWidgetsStore);\r\n                  const updatedElem = localParams.find((item) => item.param === attrs.param && item.node === attrs.node);\r\n                  checkDisabled(updatedElem, disabledElements, nodesParams, attrs.param);\r\n                   return ({\r\n                      type: Button,\r\n                      props: {\r\n                          variant: 'contained',\r\n                          onClick: () => handleClickBtn(attrs),\r\n                          children: <>{attrs.label || attrs.param}</>,\r\n                          color: 'primary',\r\n                          disabled: updatedElem?.disabled,\r\n                          size: 'small',\r\n                          style: {\r\n                              gridColumnStart: Number(attrs.gridPositionX) >= 0 ? Number(attrs.gridPositionX) + 1 : 1,\r\n                              gridRowStart: Number(attrs.gridPositionY) >= 0 ? Number(attrs.gridPositionY) + 1 : 1,\r\n                          },\r\n                          className: classes.button,\r\n                      },\r\n                  });\r\n              },\r\n              Label: (attrs) => {\r\n                  const elementParams = { node: attrs.node, param: attrs.param, type: 'Label' };\r\n                  registerParams(elementParams, ws, registeredParameters, dispatchWidgetsStore);\r\n                  const updatedElem = localParams.find((item) => item.param === attrs.param && item.node === attrs.node);\r\n                  return {\r\n                      type: Typography,\r\n                      props: {\r\n                          className: classes.paragraph,\r\n                          paragraph: true,\r\n                          style: {\r\n                              gridColumnStart: Number(attrs.gridPositionX) >= 0 ? Number(attrs.gridPositionX) + 1 : 1,\r\n                              gridRowStart: Number(attrs.gridPositionY) >= 0 ? Number(attrs.gridPositionY) + 1 : 1,\r\n                          },\r\n                          children: <>{updatedElem?.value || attrs.text}</>,\r\n                      },\r\n                  };\r\n              },\r\n              Image: ({\r\n                node, param, screenAreaControls,\r\n              }) => {\r\n                  const imageParams = { node, param, type: 'Image' };\r\n                  const comboBoxParams = { node, param: 'Calibration Area', type: 'ComboBox' };\r\n                  const checkBoxParams = { node, param: 'Bounding Box Off', type: 'CheckBox' };\r\n                  const options = ['Automatic', 'Manual', 'Full Camera Frame'];\r\n                  registerParams(imageParams, ws, registeredParameters, dispatchWidgetsStore);\r\n                  registerParams(comboBoxParams,\r\n                      ws, registeredParameters, dispatchWidgetsStore);\r\n                  registerParams(checkBoxParams, ws, registeredParameters, dispatchWidgetsStore);\r\n                  registerParams({ node, param: '$screenAreaNormalized', type: '' }, ws, registeredParameters, dispatchWidgetsStore);\r\n                  const isExistComboBoxToFill = comboBoxToFill.some((obj) => isEqual(obj, comboBoxParams));\r\n                  if (!isExistComboBoxToFill) {\r\n                      dispatchWidgetsStore({ type: ACTION_TYPES.SET_COMBO_BOX_TO_FILL, payload: comboBoxParams });\r\n                      if (ws) ws.send(JSON.stringify({ id: WIDGETS_CMD.GET_COMBO_LIST, parameters: [comboBoxParams] }));\r\n                  }\r\n                  const comboListOptions = comboLists.find((item) => item.param === 'Calibration Area');\r\n                  const updatedComboBox = localParams.find((item) => item.param === 'Calibration Area');\r\n                  const isBoundingBoxOff = localParams.find((obj) => obj.param === 'Bounding Box Off')?.value === 'true';\r\n                  const isManualMode = comboListOptions?.comboList[updatedComboBox?.value] === 'Manual';\r\n\r\n                  return ({\r\n                      type: 'div',\r\n                      props: {\r\n                          style: { minWidth: '65%' },\r\n                          children: <>\r\n                            <div className={classes.imgContainer}>\r\n                              <MapInteractionCSS disablePan={disabledPan}>\r\n                                <img\r\n                                  width={stageWidth}\r\n                                  height={stageHeight}\r\n                                  className={classes.img}\r\n                                  src={`http://${ip}:${port}/serverImageParam?node=${node}&param=${param}&cashing=${Date.now()}`}\r\n                                  alt=\"img\"\r\n                                />\r\n                                { isManualMode && screenAreaControls && (\r\n                                  <Stage\r\n                                    width={stageWidth}\r\n                                    height={stageHeight}\r\n                                    className={classes.stage}\r\n                                  >\r\n                                    <Layer>\r\n                                      {isBoundingBoxOff ? (\r\n                                        <EllipseShape\r\n                                          shapeProps={changedCalibrationArea}\r\n                                          isSelected\r\n                                          setDisabledPan={setDisabledPan}\r\n                                          onChange={(newAttrs) => handleEllipseChange(newAttrs, node)}\r\n                                        />\r\n                                  ) : (\r\n                                    <RectShape\r\n                                      shapeProps={changedCalibrationArea}\r\n                                      isSelected\r\n                                      setDisabledPan={setDisabledPan}\r\n                                      onChange={(newAttrs) => handleRectChange(newAttrs, node)}\r\n                                    />\r\n                                      )}\r\n                                    </Layer>\r\n                                  </Stage>\r\n                              )}\r\n                              </MapInteractionCSS>\r\n                            </div>\r\n                            {screenAreaControls && (\r\n                              <Grid wrap=\"nowrap\" container alignItems=\"center\" spacing={1}>\r\n                                <Grid item>\r\n                                  <FormControl size=\"small\" variant=\"filled\">\r\n                                    <InputLabel htmlFor=\"filled-calibration-area\">Calibration Area:</InputLabel>\r\n                                    <Select\r\n                                      value={comboListOptions?.comboList[updatedComboBox?.value] || ''}\r\n                                      className={classes.ComboBox}\r\n                                      onChange={(e) => handleComboBoxChange({\r\n                                          e, options, node, param: 'Calibration Area',\r\n                                      })}\r\n                                      inputProps={{\r\n                                          name: 'Calibration Area',\r\n                                          id: 'filled-calibration-area',\r\n                                      }}\r\n                                    >\r\n                                      {comboListOptions?.comboList && comboListOptions.comboList.map((value) => <MenuItem key={value} value={value}>{value}</MenuItem>)}\r\n                                    </Select>\r\n                                  </FormControl>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                  <FormControlLabel\r\n                                    defaultChecked\r\n                                    color=\"primary\"\r\n                                    name=\"Bounding Box Off\"\r\n                                    control={<Checkbox checked={isBoundingBoxOff} onChange={(e) => handleCheckboxChange(e, checkBoxParams)} />}\r\n                                    label=\"Bounding Box Off\"\r\n                                  />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() => handleClickBtn({ node, param: '$screenAreaNormalized', value: '0.2 0.2 0.8 0.8' })}\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    className={classes.button}\r\n                                  >\r\n                                    Reset Calibration Area\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Grid>\r\n                            )}\r\n                          </>,\r\n                      },\r\n                  });\r\n              },\r\n              ComboBox: (attrs) => {\r\n                  const elementParams = { node: attrs.node, param: attrs.param, type: 'ComboBox' };\r\n                  registerParams(elementParams, ws, registeredParameters, dispatchWidgetsStore);\r\n                  const isExistComboBoxToFill = comboBoxToFill.some((obj) => isEqual(obj, elementParams));\r\n                  if (!isExistComboBoxToFill) {\r\n                      dispatchWidgetsStore({ type: ACTION_TYPES.SET_COMBO_BOX_TO_FILL, payload: elementParams });\r\n                      if (ws) ws.send(JSON.stringify({ id: WIDGETS_CMD.GET_COMBO_LIST, parameters: [elementParams] }));\r\n                  }\r\n                  const comboListOptions = comboLists.find((item) => item.param === attrs.param && item.node === attrs.node);\r\n                  const updatedElem = localParams.find((item) => item.param === attrs.param && item.node === attrs.node);\r\n                  checkDisabled(updatedElem, disabledElements, nodesParams, attrs.param);\r\n\r\n                  return {\r\n                      type: FormControl,\r\n                      props: {\r\n                          variant: 'filled',\r\n                          size: 'small',\r\n                          disabled: updatedElem?.disabled,\r\n                          style: {\r\n                              gridColumnStart: Number(attrs.gridPositionX) >= 0 ? Number(attrs.gridPositionX) + 1 : 1,\r\n                              gridRowStart: Number(attrs.gridPositionY) >= 0 ? Number(attrs.gridPositionY) + 1 : 1,\r\n                          },\r\n                          className: classes.ComboBox,\r\n                          children: <>\r\n                            <InputLabel htmlFor={`filled-${attrs.label}`}>{attrs.label}</InputLabel>\r\n                            <Select\r\n                              value={comboListOptions?.comboList[updatedElem?.value] || ''}\r\n                              className={classes.ComboBox}\r\n                              onChange={(e) => handleComboBoxChange({ ...attrs, e, options: comboListOptions?.comboList })}\r\n                              inputProps={{\r\n                                 name: 'Calibration Area',\r\n                                 id: `filled-${attrs.label}`,\r\n                              }}\r\n                            >\r\n                              {comboListOptions?.comboList && comboListOptions.comboList.map((value) => <MenuItem key={value} value={value}>{value}</MenuItem>)}\r\n                            </Select>\r\n                          </>,\r\n                      },\r\n                  };\r\n              },\r\n           CheckBox: (attrs) => {\r\n               const elementParams = { node: attrs.node, param: attrs.param, type: 'CheckBox' };\r\n               registerParams(elementParams, ws, registeredParameters, dispatchWidgetsStore);\r\n               const updatedElem = localParams.find((obj) => {\r\n                   if (obj.param === 'value') {\r\n                       return attrs.node === obj.node;\r\n                   }\r\n                   return attrs.param === obj.param && attrs.node === obj.node;\r\n               });\r\n               checkDisabled(updatedElem, disabledElements, nodesParams, attrs.param);\r\n\r\n               return ({\r\n                   type: FormControlLabel,\r\n                   props: {\r\n                       ...attrs,\r\n                       defaultChecked: true,\r\n                       color: 'primary',\r\n                       name: attrs.label,\r\n                       disabled: updatedElem?.disabled,\r\n                       style: {\r\n                           gridColumnStart: Number(attrs.gridPositionX) >= 0 ? Number(attrs.gridPositionX) + 1 : 1,\r\n                           gridRowStart: Number(attrs.gridPositionY) >= 0 ? Number(attrs.gridPositionY) + 1 : 1,\r\n                       },\r\n                       control: <Checkbox checked={updatedElem?.value === 'true'} onChange={(e) => handleCheckboxChange(e, elementParams)} />,\r\n                       label: attrs.label,\r\n                   },\r\n               });\r\n           },\r\n              HSliderFloat: (attrs) => {\r\n                  const elementParams = { node: attrs.node, param: attrs.param, type: 'HSliderFloat' };\r\n                  registerParams(elementParams, ws, registeredParameters, dispatchWidgetsStore);\r\n                  const updatedElem = localParams.find((obj) => attrs.param === obj.param && attrs.node === obj.node);\r\n                  checkDisabled(updatedElem, disabledElements, nodesParams, attrs.param);\r\n\r\n                  return {\r\n                      type: Grid,\r\n                      props: {\r\n                          container: true,\r\n                          spacing: 1,\r\n                          wrap: 'nowrap',\r\n                          alignItems: 'center',\r\n                          className: classes.grid,\r\n                          justify: 'flex-start',\r\n                          children: <>\r\n                            { attrs.label && <Grid item><Typography>{attrs.label}</Typography></Grid>}\r\n                            <Grid item><Typography>{attrs.min}</Typography></Grid>\r\n                            <Grid item>\r\n                              <Slider\r\n                                step={0.01}\r\n                                disabled={updatedElem?.disabled}\r\n                                min={+attrs.min}\r\n                                max={+attrs.max}\r\n                                className={classes.HSliderFloat}\r\n                                value={+updatedElem?.value}\r\n                                onChange={(event, newValue) => handleSliderChange(event, newValue, attrs)}\r\n                                onChangeCommitted={(event, newValue) => handleSliderChangeCommitted(event, newValue, attrs)}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item><Typography>{attrs.max}</Typography></Grid>\r\n                            <Grid item>\r\n                              <TextField\r\n                                value={updatedElem?.value === '' || updatedElem?.value ? updatedElem?.value : 0}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                onChange={(event) => handleSliderInputChange(event, attrs)}\r\n                                disabled={updatedElem?.disabled}\r\n                                onBlur={(e) => handleBlur(e, {\r\n                                  min: +attrs.min, max: +attrs.max, param: attrs.param, node: attrs.node,\r\n                                })}\r\n                                inputProps={{\r\n                                   step: 0.01,\r\n                                   min: +attrs.min,\r\n                                   max: +attrs.max,\r\n                                   type: 'number',\r\n                                }}\r\n                              />\r\n                            </Grid>\r\n                          </>,\r\n                      },\r\n                  };\r\n              },\r\n           VSliderFloat: (attrs) => {\r\n               const elementParams = { node: attrs.node, param: attrs.param, type: 'VSliderFloat' };\r\n               registerParams(elementParams, ws, registeredParameters, dispatchWidgetsStore);\r\n               const updatedElem = localParams.find((obj) => attrs.param === obj.param && attrs.node === obj.node);\r\n               checkDisabled(updatedElem, disabledElements, nodesParams, attrs.param);\r\n\r\n               return {\r\n                   type: Grid,\r\n                   props: {\r\n                       container: true,\r\n                       spacing: 1,\r\n                       direction: 'column',\r\n                       wrap: 'nowrap',\r\n                       alignItems: 'center',\r\n                       className: classes.VSliderFloatContainer,\r\n                       children: <>\r\n                         { attrs.label && <Grid item><Typography>{attrs.label}</Typography></Grid>}\r\n                         <Grid item>{attrs.max}</Grid>\r\n                         <Grid className={classes.VSliderFloat} item>\r\n                           <Slider\r\n                             step={0.01}\r\n                             min={+attrs.min}\r\n                             max={+attrs.max}\r\n                             className={classes.VSliderFloat}\r\n                             orientation=\"vertical\"\r\n                             disabled={updatedElem?.disabled}\r\n                             value={Number(updatedElem?.value)}\r\n                             onChange={(event, newValue) => handleSliderChange(event, newValue, attrs)}\r\n                             onChangeCommitted={(event, newValue) => handleSliderChangeCommitted(event, newValue, attrs)}\r\n                           />\r\n                         </Grid>\r\n                         <Grid item>{attrs.min}</Grid>\r\n                         <Grid item>\r\n                           <TextField\r\n                             value={updatedElem?.value === '' || updatedElem?.value ? updatedElem?.value : 0}\r\n                             margin=\"dense\"\r\n                             variant=\"outlined\"\r\n                             onChange={(event) => handleSliderInputChange(event, attrs)}\r\n                             disabled={updatedElem?.disabled}\r\n                             onBlur={(e) => handleBlur(e, {\r\n                                min: +attrs.min, max: +attrs.max, param: attrs.param, node: attrs.node,\r\n                            })}\r\n                             inputProps={{\r\n                                 step: 0.01,\r\n                                 min: +attrs.min,\r\n                                 max: +attrs.max,\r\n                                 type: 'number',\r\n                             }}\r\n                           />\r\n                         </Grid>\r\n                       </>,\r\n                   },\r\n               };\r\n           },\r\n    }), [localParams, ws, nodesParams, comboLists,\r\n           registeredParameters, comboBoxToFill, disabledElements, disabledPan,\r\n           classes, updateReactWidgetTree, selectedWidget, changedCalibrationArea, stageWidth, stageHeight]);\r\n\r\n     useEffect(() => {\r\n        updatedParams.forEach((change) => {\r\n            const isExist = localParams.some((obj) => change.node === obj.node && change.param === obj.param);\r\n            setLocalParams((prevParams) => (isExist ? prevParams.map((obj) => {\r\n                if (change.node === obj.node && change.param === obj.param) return { ...obj, ...change };\r\n                return obj;\r\n            }) : [...prevParams, change]));\r\n        });\r\n     }, [updatedParams]);\r\n\r\n    useEffect(() => {\r\n        const updatedScreenAreaNormalized = updatedParams.find((item) => item.param === '$screenAreaNormalized') || localParams.find((item) => item.param === '$screenAreaNormalized');\r\n        const isBoundingBoxOff = updatedParams.find((item) => item.param === 'Bounding Box Off') || localParams.find((obj) => obj.param === 'Bounding Box Off');\r\n        if (updatedScreenAreaNormalized && isBoundingBoxOff) {\r\n            const coordinates = updatedScreenAreaNormalized.value.split(' ');\r\n            const width = Number(((coordinates[2] - coordinates[0]) * stageWidth).toFixed(14));\r\n            const height = Number(((coordinates[3] - coordinates[1]) * stageHeight).toFixed(14));\r\n            if (isBoundingBoxOff.value === 'true') {\r\n                const changedCalibAreaByScreenberry = {\r\n                    x: Number((coordinates[0] * stageWidth + width / 2).toFixed(14)),\r\n                    y: Number(((1 - coordinates[3]) * stageHeight + height / 2).toFixed(14)),\r\n                    width,\r\n                    height,\r\n                    id: 'ellipse',\r\n                };\r\n                if (!isEqual(changedCalibrationArea, changedCalibAreaByScreenberry)) setChangedCalibArea(changedCalibAreaByScreenberry);\r\n            } else if (isBoundingBoxOff.value === 'false') {\r\n                const changedCalibAreaByScreenberry = {\r\n                    x: Number((coordinates[0] * stageWidth).toFixed(14)),\r\n                    y: Number(((1 - coordinates[3]) * stageHeight).toFixed(14)),\r\n                    width,\r\n                    height,\r\n                    id: 'rect',\r\n                };\r\n                if (!isEqual(changedCalibrationArea, changedCalibAreaByScreenberry)) setChangedCalibArea(changedCalibAreaByScreenberry);\r\n            }\r\n        }\r\n    }, [localParams, updatedParams, stageWidth, stageHeight]);\r\n\r\n     useEffect(() => {\r\n         setReactTree(xmlToReact.convert(widgetsXML));\r\n     }, [widgetsXML, xmlToReact]);\r\n\r\n      return useMemo(() => (\r\n        <Paper className={classes.rootPaper}>\r\n          {ws && reactTree}\r\n        </Paper>\r\n      ), [reactTree, ws, classes]);\r\n};\r\n\r\nexport default Widget;\r\n","import React from 'react';\r\nimport WidgetList from 'components/WidgetList';\r\nimport Widget from 'components/Widget';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nconst Widgets = () => {\r\n    const classes = useStyles();\r\n    return (\r\n      <div className={classes.container}>\r\n        <WidgetList />\r\n        <Widget />\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Widgets;\r\n","import React, { useState } from 'react';\r\nimport { MenuItem, Select, FormControl } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles({\r\n    formControl: {\r\n        width: 85,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n});\r\n\r\nconst LanguageSwitcher = ({ style }) => {\r\n    const classes = useStyles();\r\n    const { i18n } = useTranslation();\r\n    const [language, setLanguage] = useState(localStorage.getItem('SBWebLanguage') || 'en');\r\n    const handleLanguageChange = (event) => {\r\n        const newlang = event.target.value;\r\n        setLanguage(newlang);\r\n        i18n.changeLanguage(newlang);\r\n        localStorage.setItem('SBWebLanguage', newlang);\r\n    };\r\n    return (\r\n      <FormControl style={style} size=\"small\" variant=\"outlined\" className={classes.formControl}>\r\n        <Select\r\n          value={language}\r\n          onChange={handleLanguageChange}\r\n        >\r\n          <MenuItem value=\"en\">EN</MenuItem>\r\n          <MenuItem value=\"ch\">CH</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n};\r\nexport default LanguageSwitcher;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n CssBaseline, AppBar, Box, Tab, Tabs,\r\n} from '@material-ui/core';\r\nimport WidgetsRoundedIcon from '@material-ui/icons/WidgetsRounded';\r\nimport VideoLibraryRoundedIcon from '@material-ui/icons/VideoLibraryRounded';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MediaPlayer from 'pages/MediaPlayer';\r\nimport Widgets from 'pages/Widgets';\r\nimport LanguageSwitcher from 'components/LanguageSwitcher';\r\nimport { useTranslation } from 'react-i18next';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { useHistory } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(1),\r\n        [theme.breakpoints.up('desktop')]: {\r\n            marginRight: 0,\r\n            fontSize: '35px',\r\n        },\r\n    },\r\n    switcher: {\r\n        marginLeft: 'auto',\r\n    },\r\n    AppBarFooter: {\r\n        top: 'auto ',\r\n        bottom: 0,\r\n    },\r\n    TabContentContainer: {\r\n        height: '100%',\r\n        width: '100%',\r\n        overflow: 'hidden',\r\n        position: 'fixed',\r\n    },\r\n    Label: {\r\n        [theme.breakpoints.down('md')]: {\r\n           lineHeight: 1.2,\r\n        },\r\n    },\r\n}));\r\n\r\nconst TabPanel = ({\r\n         children, value, index, currentPage, page, ...other\r\n     }) => (\r\n       <Box\r\n         height=\"100%\"\r\n         overflow=\"hidden\"\r\n         display={currentPage === page ? 'block' : 'none'}\r\n         id={`full-width-tabpanel-${index}`}\r\n         aria-labelledby={`full-width-tab-${index}`}\r\n         style={{ willChange: 'transform' }}\r\n         {...other}\r\n       >\r\n         {children}\r\n       </Box>\r\n     );\r\n\r\nconst a11yProps = (index) => ({ id: `full-width-tab-${index}`, 'aria-controls': `full-width-tabpanel-${index}` });\r\n\r\nconst TabsLayout = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [currentTabIndex, setCurrentTabIndex] = useState(0);\r\n    const { t } = useTranslation();\r\n    const history = useHistory();\r\n    const { page } = queryString.parse(window.location.search);\r\n\r\n    const changeUrl = (index) => {\r\n        if (index === 0) {\r\n            history.replace({\r\n            search: queryString.stringify({ ...queryString.parse(window.location.search), page: 'media-player' }),\r\n        });\r\n    }\r\n        if (index === 1) history.replace({ search: queryString.stringify({ ...queryString.parse(window.location.search), page: 'widgets' }) });\r\n        setCurrentTabIndex(index);\r\n    };\r\n    useEffect(() => {\r\n        if (page === 'media-player' && currentTabIndex !== 0) setCurrentTabIndex(0);\r\n        if (page === 'widgets' && currentTabIndex !== 1) setCurrentTabIndex(1);\r\n    }, [page]);\r\n    return (\r\n      <>\r\n        <CssBaseline />\r\n        <SwipeableViews\r\n          index={currentTabIndex}\r\n          disabled\r\n          className={classes.TabContentContainer}\r\n          onChangeIndex={(index) => changeUrl(index)}\r\n        >\r\n          <TabPanel page=\"media-player\" currentPage={page || 'media-player'} value={currentTabIndex} index={0}>\r\n            <MediaPlayer />\r\n          </TabPanel>\r\n          <TabPanel page=\"widgets\" currentPage={page} value={currentTabIndex} index={1}>\r\n            <Widgets />\r\n          </TabPanel>\r\n        </SwipeableViews>\r\n        <AppBar className={classes.AppBarFooter} color=\"default\">\r\n          <Tabs\r\n            value={currentTabIndex}\r\n            onChange={(event, index) => changeUrl(index)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n            TabIndicatorProps={{ style: { width: 'calc(50vw - 50px)' } }}\r\n          >\r\n            <Tab\r\n              classes={{ root: classes.Label }}\r\n              label={(\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <VideoLibraryRoundedIcon className={classes.icon} />\r\n                  {t('Media Player')}\r\n                </Box>\r\n                )}\r\n              {...a11yProps(0)}\r\n            />\r\n            <Tab\r\n              classes={{ root: classes.Label }}\r\n              label={(\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <WidgetsRoundedIcon className={classes.icon} />\r\n                  {t('Widgets')}\r\n                </Box>\r\n                    )}\r\n              {...a11yProps(1)}\r\n            />\r\n            <LanguageSwitcher style={{\r\n               marginLeft: theme.spacing(1),\r\n               marginRight: theme.spacing(1),\r\n            }}\r\n            />\r\n          </Tabs>\r\n        </AppBar>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default TabsLayout;\r\n","import React, { useMemo } from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst CustomNavLink = ({\r\n children, to, ...props\r\n}) => {\r\n  const CustomLink = useMemo(\r\n    () => React.forwardRef((linkProps, ref) => (\r\n      <NavLink ref={ref} to={to} {...linkProps} />\r\n    )),\r\n    [to],\r\n  );\r\n\r\n  return (\r\n    <ListItem {...props} button component={CustomLink}>\r\n      {children}\r\n    </ListItem>\r\n  );\r\n};\r\nexport default CustomNavLink;\r\n","import { useEffect } from 'react';\r\nimport setLocationParams from 'lib/utils/setLocationParams';\r\nimport { useHistory } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\n\r\nconst About = () => {\r\n    const history = useHistory();\r\n    const { page } = queryString.parse(window.location.search);\r\n\r\n    useEffect(() => {\r\n        if (page === 'about') setLocationParams({ page, history });\r\n    }, [page]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default About;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {\r\n Drawer, AppBar, Toolbar, List, CssBaseline, ListItemIcon,\r\n Typography, Divider, IconButton, ListItemText, Box,\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport WidgetsRoundedIcon from '@material-ui/icons/WidgetsRounded';\r\nimport VideoLibraryRoundedIcon from '@material-ui/icons/VideoLibraryRounded';\r\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport CustomNavLink from 'elements/CustomNavLink';\r\nimport { useMainStore } from 'store/ProviderStore';\r\nimport { useTranslation } from 'react-i18next';\r\nimport clsx from 'clsx';\r\nimport LanguageSwitcher from 'components/LanguageSwitcher';\r\nimport Widgets from 'pages/Widgets';\r\nimport MediaPlayer from 'pages/MediaPlayer';\r\nimport About from 'pages/About';\r\nimport queryString from 'query-string';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        willChange: 'width, margin',\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        willChange: 'width, margin',\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(1),\r\n        [theme.breakpoints.up('lg')]: {\r\n            marginRight: 0,\r\n            fontSize: '35px',\r\n        },\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        willChange: 'width, margin',\r\n        paddingLeft: 0,\r\n        paddingTop: theme.spacing(1),\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        willChange: 'width, margin',\r\n        marginLeft: 0,\r\n    },\r\n    logo: {\r\n        width: 38,\r\n        height: 38,\r\n        marginRight: 7,\r\n    },\r\n    isConnected: {\r\n        margin: theme.spacing(1),\r\n        whiteSpace: 'nowrap',\r\n    },\r\n}));\r\n\r\nconst DesktopLayout = () => {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const { t } = useTranslation();\r\n    const [{ isConnected }] = useMainStore();\r\n    const location = useLocation();\r\n    const { page, serverIp, serverPort } = queryString.parse(location.search);\r\n\r\n    const handleDrawerOpen = () => setOpen(true);\r\n    const handleDrawerClose = () => setOpen(false);\r\n\r\n    return (\r\n      <>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: open,\r\n          })}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              edge=\"start\"\r\n              className={clsx(open && classes.hide)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <CustomNavLink to={{\r\n              ...location,\r\n              search: queryString.stringify(serverIp || serverPort ? { page: 'root', serverIp, serverPort } : { page: 'root' }),\r\n            }}\r\n            >\r\n              <img className={classes.logo} src={`${process.env.PUBLIC_URL}/assets/icons/logo/Screenberry_Logo_Web.svg`} alt=\"logo\" />\r\n              <Typography variant=\"h6\" noWrap>\r\n                Screenberry Web Panel\r\n              </Typography>\r\n            </CustomNavLink>\r\n            <Typography className={classes.isConnected}>{isConnected ? t('Connected') : t('Disconnected')}</Typography>\r\n            <FiberManualRecordIcon style={{ color: isConnected ? '#00d215' : '#ce9a1d' }} />\r\n            <LanguageSwitcher />\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          anchor=\"left\"\r\n          open={open}\r\n          onClose={handleDrawerClose}\r\n          classes={{ paper: classes.drawerPaper }}\r\n        >\r\n          <div className={classes.toolbar}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List component=\"nav\">\r\n            <CustomNavLink\r\n              onClick={handleDrawerClose}\r\n              activeStyle={page === 'media-player' ? { borderRight: `2px solid ${ deepOrange[800] }` } : {}}\r\n              to={{\r\n                 ...location,\r\n                 search: queryString.stringify({ ...queryString.parse(location.search), page: 'media-player' }),\r\n              }}\r\n            >\r\n              <ListItemIcon><VideoLibraryRoundedIcon className={classes.icon} /></ListItemIcon>\r\n              <ListItemText primary={t('Media Player')} />\r\n            </CustomNavLink>\r\n            <CustomNavLink\r\n              onClick={handleDrawerClose}\r\n              activeStyle={page === 'widgets' ? { borderRight: `2px solid ${ deepOrange[800] }` } : {}}\r\n              to={{\r\n                  ...location,\r\n                  search: queryString.stringify({ ...queryString.parse(location.search), page: 'widgets' }),\r\n              }}\r\n            >\r\n              <ListItemIcon><WidgetsRoundedIcon className={classes.icon} /></ListItemIcon>\r\n              <ListItemText primary={t('Widgets')} />\r\n            </CustomNavLink>\r\n            <CustomNavLink\r\n              onClick={handleDrawerClose}\r\n              activeStyle={page === 'about' ? { borderRight: `2px solid ${ deepOrange[800] }` } : {}}\r\n              to={{\r\n                  ...location,\r\n                  search: queryString.stringify({ ...queryString.parse(location.search), page: 'about' }),\r\n              }}\r\n            >\r\n              <ListItemIcon><InfoRoundedIcon className={classes.icon} /></ListItemIcon>\r\n              <ListItemText primary={t('About')} />\r\n            </CustomNavLink>\r\n          </List>\r\n          <Divider />\r\n        </Drawer>\r\n        <main className={clsx(classes.content, {\r\n            [classes.contentShift]: open,\r\n        })}\r\n        >\r\n          <div className={classes.toolbar} />\r\n          <Box display={page === 'media-player' || !page ? 'block' : 'none'}>\r\n            <MediaPlayer page={page} />\r\n          </Box>\r\n          <Box display={page === 'widgets' ? 'block' : 'none'}>\r\n            <Widgets page={page} />\r\n          </Box>\r\n          <Box display={page === 'about' ? 'block' : 'none'}>\r\n            <About page={page} />\r\n          </Box>\r\n        </main>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default DesktopLayout;\r\n","import React from 'react';\r\nimport { Box, Snackbar } from '@material-ui/core';\r\nimport { useMainStore } from 'store/ProviderStore';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport ACTION_TYPES from 'constants/ACTION_TYPES';\r\n\r\nconst Alert = (props) => <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n\r\nconst LogMessage = () => {\r\n    const [{\r\n        logMsg: {\r\n           showLogMsg, from, msg, severity, duration,\r\n        },\r\n    }, dispatchMainStore] = useMainStore();\r\n\r\n    const handleCloseSnackbar = () => dispatchMainStore({ type: ACTION_TYPES.HIDE_LOG_MSG });\r\n\r\n    return (\r\n      <Snackbar onClose={severity === 'error' ? () => {} : handleCloseSnackbar} autoHideDuration={duration} open={showLogMsg}>\r\n        <Alert onClose={handleCloseSnackbar} severity={severity}>\r\n          <Box component=\"h5\">{from}</Box>\r\n          <Box component=\"p\">{msg}</Box>\r\n        </Alert>\r\n      </Snackbar>\r\n    );\r\n};\r\n\r\nexport default LogMessage;\r\n","import React, { useMemo, useEffect } from 'react';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport { useMediaQuery } from '@material-ui/core';\r\nimport useWSBroadcast from 'hooks/useWSBroadcast';\r\nimport TabsLayout from 'components/TabsLayout';\r\nimport DesktopLayout from 'components/DesktopLayout';\r\nimport LogMessage from 'components/LogMessage';\r\nimport queryString from 'query-string';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst darkTheme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n        primary: {\r\n            main: deepOrange[800],\r\n            darkTransparentBtn: 'rgba(0,0,0,0.4)',\r\n        },\r\n        secondary: {\r\n            main: '#169de0',\r\n        },\r\n    },\r\n});\r\n\r\nconst LayoutContainer = () => {\r\n    const isDesktop = useMediaQuery('(min-width:1280px)');\r\n    useWSBroadcast();\r\n    const history = useHistory();\r\n    const locationParams = queryString.parse(window.location.search);\r\n\r\n    useEffect(() => {\r\n       if (!locationParams.page) history.replace({ search: queryString.stringify({ ...locationParams, page: 'media-player' }) });\r\n    }, []);\r\n\r\n    return useMemo(() => (\r\n      <ThemeProvider theme={darkTheme}>\r\n        { isDesktop ? <DesktopLayout /> : <TabsLayout />}\r\n        <LogMessage />\r\n      </ThemeProvider>\r\n    ), [isDesktop]);\r\n};\r\n\r\nexport default LayoutContainer;\r\n","import { useEffect } from 'react';\r\n\r\nconst useCleanCache = () => {\r\n    const cleanCache = () => {\r\n        if ('caches' in window) {\r\n            caches.keys().then((names) => {\r\n                for (let i = 0, namesArr = names; i < namesArr.length; i++) {\r\n                    const name = namesArr[i];\r\n                    caches.delete(name);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener('beforeunload', cleanCache);\r\n        return () => {\r\n            window.removeEventListener('beforeunload', cleanCache);\r\n        };\r\n    }, []);\r\n};\r\nexport default useCleanCache;\r\n","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport 'rsuite/dist/styles/rsuite-dark.css';\r\nimport './styles.css';\r\nimport LayoutContainer from 'components/LayoutContainer';\r\nimport useCleanCache from 'hooks/useCleanCache';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nconst App = () => {\r\n    useCleanCache();\r\n\r\n    return (\r\n      <Router>\r\n        <Route path={['/:page', '/']}>\r\n          <LayoutContainer />\r\n        </Route>\r\n      </Router>\r\n    );\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function registerSW(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service '\r\n                        + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all '\r\n                                + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404\r\n                || (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.',\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregisterSW() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport ProviderStore from 'store/ProviderStore';\r\nimport 'locales/i18n';\r\nimport App from './App';\r\nimport { unregisterSW } from './serviceWorker';\r\n\r\nrender(\r\n  <ProviderStore>\r\n    <App />\r\n  </ProviderStore>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nunregisterSW();\r\n","import queryString from 'query-string';\r\n\r\nconst setLocationParams = ({\r\n page, history, params = {},\r\n}) => {\r\n    const locationParams = queryString.parse(window.location.search);\r\n    if (page === 'media-player') {\r\n        delete locationParams.widget;\r\n    }\r\n    if (page === 'widgets') {\r\n       delete locationParams.MP;\r\n       delete locationParams.playlistId;\r\n    }\r\n    if (page === 'about') {\r\n        delete locationParams.MP;\r\n        delete locationParams.playlistId;\r\n        delete locationParams.widget;\r\n    }\r\n    history.replace({ search: queryString.stringify({ ...locationParams, ...params }) });\r\n};\r\n\r\nexport default setLocationParams;\r\n"],"sourceRoot":""}